openapi: 3.0.3
info:
  title: Ottu API
  version: 1.0.0
  description: Ottu API
paths:
  /b/checkout/api/sdk/v1/pre-payment-option-check/{session_id}/:
    post:
      operationId: get_pre_payment_option
      description: This endpoint allows you to retrieve the pre payment options for
        specific user using tabby integrated API.
      summary: Retrieve Pre Payment Check response.
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
          pattern: ^[-\w]+$
        required: true
      tags:
      - PaymentMethods API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PGCodeValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PGCodeValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PGCodeValidation'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrePaymentCheckResponses'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldErrors'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/checkout/v1/pymt-txn/:
    post:
      operationId: create_payment_transaction_checkout
      description: Create a new Payment Transaction
      summary: Create a new Payment Transaction
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - Checkout API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutPOSTRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckoutPOSTRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckoutPOSTRequest'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutPOSTResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '423':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/checkout/v1/upload-attachment/:
    post:
      operationId: upload_attachment
      description: Upload a file, attach it to a transaction if `session_id` or `order_no`
        is provided and shorify if `shortify_attachment_url` is true.
      summary: Attachment Upload
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - Checkout API
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachmentUpload'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentUploadSuccessSerializers'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentUploadClientErrors'
          description: ''
  /b/invoice/v1/invoice/:
    post:
      operationId: create_invoice
      description: Create a new Invoice
      summary: Create a new Invoice
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - Invoice API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePOSTRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicePOSTRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicePOSTRequest'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePOSTResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceClientErrors'
          description: ''
  /b/pbl/v2/auto-debit/:
    post:
      operationId: auto_debit
      description: "This endpoint will take a session id and check for it's related\
        \ payment if it's possible to be auto charged  or not. <br/> if possible it\
        \ will charge the payment and return the operation response. <br/> \U0001F4DD\
        \ **NOTE** Optional fields may not be represented in response body.\n    \
        \    "
      summary: Auto debit endpoint for auto debit payment flow
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - Auto Debit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoDebit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AutoDebit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AutoDebit'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoDebitErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/card/:
    post:
      operationId: get_user_cards
      description: "This endpoint retrieves a list of cards saved by the customer.\
        \ The response includes details such as the card's masked number, card type,\
        \ and expiration date. By using this endpoint, you can provide the customer\
        \ with an overview of their saved cards for future payments.\n\n**Note**:\
        \ if card is created via save_card operation, below details should be considered\n\
        1. The amount must be zero for the save card operation. \n2. The selected\
        \ MID(pg_code) must support tokenization to enable the save card operation.\
        \ \n3. Please note that the save card operation is considered successful without\
        \ any funds being charged.\n4. Once a card is created, Ottu will send a webhook\
        \ containing the card details to the merchant's webhook URL.\n"
      summary: Retrieve a list of saved cards for the customer.
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - User Cards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCards'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCards'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCards'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/card/{token}/:
    delete:
      operationId: delete_user_cards
      description: This endpoint allows you to delete a customer's saved card from
        the system. Provide the unique card identifier to remove the card from the
        customer's saved cards list. This action can help maintain up-to-date card
        information and ensure that customers do not accidentally use expired or unwanted
        cards for payments.
      summary: Delete a saved card for the customer.
      parameters:
      - in: path
        name: customer_id
        schema:
          type: string
        description: Utilized to retrieve cards associated with a specific customer
          using their unique customer_id..
        required: true
      - in: path
        name: token
        schema:
          type: string
        description: The unique token associated with the card to be deleted.
        required: true
      - in: path
        name: type
        schema:
          type: string
        description: Choose between `sandbox` and `production`. Select sandbox to
          retrieve cards created for test Payment Gateway MIDs, or production to fetch
          real cards used in live transactions.
        required: true
      tags:
      - User Cards
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/cash-payment/:
    post:
      operationId: cash_payment_acknowledgement
      description: Endpoint for handling cash payment acknowledgement requests <br/>
        📝 **NOTE** Optional fields may not be represented in response body.
      summary: Cash Payment.
      tags:
      - CashPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CashPayment'
        required: true
      security:
      - basicAuth: []
      - SSO BasicAuth: []
      - SSO JWT Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cash acknowledgement Errors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/inquiry/:
    post:
      operationId: inquiry
      description: "The Check Status-Inquiry endpoint is part of our Payment Gateway\
        \ API. It's designed for checking the status of a specific payment transaction.\
        \ This endpoint is particularly useful when notifications about a transaction\
        \ status change haven't been received. It acts as a manual check for confirming\
        \ the payment status, mirroring the structure of a payment webhook notification.\
        \ \n\nThe Inquiry operation can only be triggered for payment transactions\
        \ in the `pending`, `attempted`, `failed`, or `expired` states. If the transaction\
        \ state is already `paid` or `authorized`, the response is returned immediately\
        \ without re-confirming it with third-party Payment Gateways (PGs). However,\
        \ if the system isn't up to date and the transaction state is still in one\
        \ of the mentioned states, Ottu will trigger an API call to the PG to update\
        \ the transaction state. If multiple payment options were attempted using\
        \ different PGs, all PGs supporting payment status checks will be called,\
        \ ensuring the merchant receives the most updated status of the payment. \n\
        \nThis endpoint uses a throttling mechanism to prevent potential system abuse.\
        \ Throttling rules are as follows:\n\n1. **Initial Grace Period (10 minutes):**\
        \ If the Inquiry endpoint is called within 10 minutes from when the payment\
        \ transaction is created, the request will be throttled.\n\n2. **First Request:**\
        \ Once the initial grace period has passed, the first request is allowed.\
        \ Subsequent requests for the same transaction within the next 30 minutes\
        \ will be throttled.\n\n3. **Second Request:** After the end of the first\
        \ throttle period, a second request is permitted. Further requests for the\
        \ same transaction within another 30 minutes from the second request are throttled.\n\
        \n4. **Subsequent Requests:** If the number of requests for the same transaction\
        \ exceeds three within the overall time frame, any further requests are denied.\n\
        \nNote: The above rules are applied per transaction. Additionally, the endpoint\
        \ allows a maximum of 30 requests per minute across all transactions.\n\n\
        It's mandatory to provide at least one of the identifiers (`session_id` or\
        \ `order_no`)."
      summary: Check Status-Inquiry
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - Payment Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InquiryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InquiryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InquiryRequest'
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/message-notification/:
    post:
      operationId: message_notifications
      description: "The Message Notifications API provides an interface to send proper\
        \ notification for any given transaction based on the provided `session_id`\
        \ or `order_no`.\n\nThis API is useful when you need to manually trigger the\
        \ notification process for a specific payment transaction, such as when a\
        \ payment is successful but the notification has not been sent.\n\nTwo key\
        \ identifiers, `order_no` and `session_id`, can be used interchangeably to\
        \ specify the payment transaction that the operation should be applied to.\n\
        \nBy providing any combination of `email`, `sms` or `whatsapp` in `channels`,\
        \ if relative configurations are present and the transaction's notification\
        \ field has the event inside the specified channel, the API will initiate\
        \ the notification process. \n\nFor every operation, the API provides a clear\
        \ response containing information about the executed operation, a user-friendly\
        \ message (`detail`), and the operation's result (`success` indicates a successful\
        \ operation).\n\n"
      summary: Message Notifications
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      tags:
      - Payment Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageNotification'
            examples:
              SMS:
                value:
                  session_id: <add `session_id` here>
                  channels:
                  - sms
              Email:
                value:
                  order_no: <add `order_no` here>
                  channels:
                  - email
                summary: Email
              WhatsApp&SMS:
                value:
                  session_id: <add `session_id` here>
                  channels:
                  - sms
                  - whatsapp
                summary: WhatsApp & SMS Notifications
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageNotification'
        required: true
      security:
      - SSO JWT Auth: []
      - jwtAuth: []
      - tokenAuth: []
      - basicAuth: []
      - SSO BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotificationResponses'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotificationErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/operation/:
    post:
      operationId: public_operations
      description: |+
        The Payment Operations API provides an interface to manage your payment transactions beyond their initial creation. It allows for several operations including `refund`, `capture`, `void`, and others, directly syncing with the Payment Gateway (PG) for certain actions to ensure consistency across systems.

        Two key identifiers, `order_no` and `session_id`, can be used interchangeably to specify the payment transaction that the operation should be applied to.

        For operations such as `refund` and `capture`, you can optionally define the `amount` to be actioned. If not provided, the API will attempt to perform the operation on the full amount, or the remaining amount if previous operations were conducted. However, note that for `void`, the operation always applies to the full amount, ignoring the `amount` value if provided.

        This API also allows you to perform certain operations solely at the Ottu system level, providing increased control over your payment transactions.

        For every operation, the API provides a clear response containing information about the executed operation, a user-friendly message (`detail`), and the operation's result (`success` indicates a successful operation).

      summary: Operations
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
          default: Api-Key vSUmxsXx.V81oYvOWFMcIywaOu57Utx6VSCmG11lo
        description: Private API key to be provided in the format `Api-Key <key>`.
        required: true
      - in: header
        name: Tracking-Key
        schema:
          type: string
          default: 'Tracking-Key: your_operation_tracking_key'
        description: |+
          The Tracking-Key is a unique identifier provided by the merchant for each operation request.

          It is crucial for ensuring the distinctiveness of each operation.

          When initiating an operation, this key is stored alongside other transaction details in the database.

          It serves as a reference for future status queries.

          Enabling the retrieval of the latest status information for a specific operation.

          Ensure that each `Tracking-Key` is distinct to prevent ambiguities in operation tracking and status updates.

      tags:
      - Payment Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operation'
            examples:
              Expire:
                value:
                  session_id: <add `session_id` here>
                  operation: expire
              Refund:
                value:
                  session_id: <add `session_id` here>
                  operation: refund
                  amount: '100.000'
                summary: Refund
              IFGRefund:
                value:
                  session_id: <add `session_id` here>
                  operation: refund
                  amount: '100.000'
                  extra:
                    orders:
                    - passengerDocumentNumber: '4862100022075'
                      amount: 1
                    - passengerDocumentNumber: '4862100022076'
                      amount: 1
                    - passengerDocumentNumber: '4862100022077'
                      amount: 0
                summary: IFG Partial Refund
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Operation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Operation'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOperationResponses'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOperationErrors'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
  /b/pbl/v2/payment-methods/:
    post:
      operationId: get_payment_methods
      description: This endpoint allows you to retrieve the available payment methods
        for a specific plugin, operation and customer. You can specify the desired
        filter field to get a list of payment methods that are supported and accessible.
      summary: Retrieve a list of payment methods based on filter values.
      tags:
      - PaymentMethods API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethodsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethodsRequest'
        required: true
      security:
      - SSO BasicAuth: []
      - basicAuth: []
      - SSO JWT Auth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldErrors'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorMessage'
          description: ''
components:
  schemas:
    Address:
      type: object
      description: Nested serializer to save Address data into PaymentTransaction
      properties:
        line1:
          type: string
          maxLength: 128
        line2:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 40
        country:
          enum:
          - AF
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - CV
          - KH
          - CM
          - CA
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - HR
          - CU
          - CW
          - CY
          - CZ
          - CI
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - SZ
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KP
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MK
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RO
          - RU
          - RW
          - RE
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - SS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TM
          - TC
          - TV
          - TR
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          - AX
          type: string
          description: |-
            * `AF` - Afghanistan
            * `AL` - Albania
            * `DZ` - Algeria
            * `AS` - American Samoa
            * `AD` - Andorra
            * `AO` - Angola
            * `AI` - Anguilla
            * `AQ` - Antarctica
            * `AG` - Antigua and Barbuda
            * `AR` - Argentina
            * `AM` - Armenia
            * `AW` - Aruba
            * `AU` - Australia
            * `AT` - Austria
            * `AZ` - Azerbaijan
            * `BS` - Bahamas
            * `BH` - Bahrain
            * `BD` - Bangladesh
            * `BB` - Barbados
            * `BY` - Belarus
            * `BE` - Belgium
            * `BZ` - Belize
            * `BJ` - Benin
            * `BM` - Bermuda
            * `BT` - Bhutan
            * `BO` - Bolivia, Plurinational State of
            * `BQ` - Bonaire, Sint Eustatius and Saba
            * `BA` - Bosnia and Herzegovina
            * `BW` - Botswana
            * `BV` - Bouvet Island
            * `BR` - Brazil
            * `IO` - British Indian Ocean Territory
            * `BN` - Brunei Darussalam
            * `BG` - Bulgaria
            * `BF` - Burkina Faso
            * `BI` - Burundi
            * `CV` - Cabo Verde
            * `KH` - Cambodia
            * `CM` - Cameroon
            * `CA` - Canada
            * `KY` - Cayman Islands
            * `CF` - Central African Republic
            * `TD` - Chad
            * `CL` - Chile
            * `CN` - China
            * `CX` - Christmas Island
            * `CC` - Cocos (Keeling) Islands
            * `CO` - Colombia
            * `KM` - Comoros
            * `CG` - Congo
            * `CD` - Congo, The Democratic Republic of the
            * `CK` - Cook Islands
            * `CR` - Costa Rica
            * `HR` - Croatia
            * `CU` - Cuba
            * `CW` - Curaçao
            * `CY` - Cyprus
            * `CZ` - Czechia
            * `CI` - Côte d'Ivoire
            * `DK` - Denmark
            * `DJ` - Djibouti
            * `DM` - Dominica
            * `DO` - Dominican Republic
            * `EC` - Ecuador
            * `EG` - Egypt
            * `SV` - El Salvador
            * `GQ` - Equatorial Guinea
            * `ER` - Eritrea
            * `EE` - Estonia
            * `SZ` - Eswatini
            * `ET` - Ethiopia
            * `FK` - Falkland Islands (Malvinas)
            * `FO` - Faroe Islands
            * `FJ` - Fiji
            * `FI` - Finland
            * `FR` - France
            * `GF` - French Guiana
            * `PF` - French Polynesia
            * `TF` - French Southern Territories
            * `GA` - Gabon
            * `GM` - Gambia
            * `GE` - Georgia
            * `DE` - Germany
            * `GH` - Ghana
            * `GI` - Gibraltar
            * `GR` - Greece
            * `GL` - Greenland
            * `GD` - Grenada
            * `GP` - Guadeloupe
            * `GU` - Guam
            * `GT` - Guatemala
            * `GG` - Guernsey
            * `GN` - Guinea
            * `GW` - Guinea-Bissau
            * `GY` - Guyana
            * `HT` - Haiti
            * `HM` - Heard Island and McDonald Islands
            * `VA` - Holy See (Vatican City State)
            * `HN` - Honduras
            * `HK` - Hong Kong
            * `HU` - Hungary
            * `IS` - Iceland
            * `IN` - India
            * `ID` - Indonesia
            * `IR` - Iran, Islamic Republic of
            * `IQ` - Iraq
            * `IE` - Ireland
            * `IM` - Isle of Man
            * `IL` - Israel
            * `IT` - Italy
            * `JM` - Jamaica
            * `JP` - Japan
            * `JE` - Jersey
            * `JO` - Jordan
            * `KZ` - Kazakhstan
            * `KE` - Kenya
            * `KI` - Kiribati
            * `KP` - Korea, Democratic People's Republic of
            * `KR` - Korea, Republic of
            * `KW` - Kuwait
            * `KG` - Kyrgyzstan
            * `LA` - Lao People's Democratic Republic
            * `LV` - Latvia
            * `LB` - Lebanon
            * `LS` - Lesotho
            * `LR` - Liberia
            * `LY` - Libya
            * `LI` - Liechtenstein
            * `LT` - Lithuania
            * `LU` - Luxembourg
            * `MO` - Macao
            * `MG` - Madagascar
            * `MW` - Malawi
            * `MY` - Malaysia
            * `MV` - Maldives
            * `ML` - Mali
            * `MT` - Malta
            * `MH` - Marshall Islands
            * `MQ` - Martinique
            * `MR` - Mauritania
            * `MU` - Mauritius
            * `YT` - Mayotte
            * `MX` - Mexico
            * `FM` - Micronesia, Federated States of
            * `MD` - Moldova, Republic of
            * `MC` - Monaco
            * `MN` - Mongolia
            * `ME` - Montenegro
            * `MS` - Montserrat
            * `MA` - Morocco
            * `MZ` - Mozambique
            * `MM` - Myanmar
            * `NA` - Namibia
            * `NR` - Nauru
            * `NP` - Nepal
            * `NL` - Netherlands
            * `NC` - New Caledonia
            * `NZ` - New Zealand
            * `NI` - Nicaragua
            * `NE` - Niger
            * `NG` - Nigeria
            * `NU` - Niue
            * `NF` - Norfolk Island
            * `MK` - North Macedonia
            * `MP` - Northern Mariana Islands
            * `NO` - Norway
            * `OM` - Oman
            * `PK` - Pakistan
            * `PW` - Palau
            * `PS` - Palestine, State of
            * `PA` - Panama
            * `PG` - Papua New Guinea
            * `PY` - Paraguay
            * `PE` - Peru
            * `PH` - Philippines
            * `PN` - Pitcairn
            * `PL` - Poland
            * `PT` - Portugal
            * `PR` - Puerto Rico
            * `QA` - Qatar
            * `RO` - Romania
            * `RU` - Russian Federation
            * `RW` - Rwanda
            * `RE` - Réunion
            * `BL` - Saint Barthélemy
            * `SH` - Saint Helena, Ascension and Tristan da Cunha
            * `KN` - Saint Kitts and Nevis
            * `LC` - Saint Lucia
            * `MF` - Saint Martin (French part)
            * `PM` - Saint Pierre and Miquelon
            * `VC` - Saint Vincent and the Grenadines
            * `WS` - Samoa
            * `SM` - San Marino
            * `ST` - Sao Tome and Principe
            * `SA` - Saudi Arabia
            * `SN` - Senegal
            * `RS` - Serbia
            * `SC` - Seychelles
            * `SL` - Sierra Leone
            * `SG` - Singapore
            * `SX` - Sint Maarten (Dutch part)
            * `SK` - Slovakia
            * `SI` - Slovenia
            * `SB` - Solomon Islands
            * `SO` - Somalia
            * `ZA` - South Africa
            * `GS` - South Georgia and the South Sandwich Islands
            * `SS` - South Sudan
            * `ES` - Spain
            * `LK` - Sri Lanka
            * `SD` - Sudan
            * `SR` - Suriname
            * `SJ` - Svalbard and Jan Mayen
            * `SE` - Sweden
            * `CH` - Switzerland
            * `SY` - Syrian Arab Republic
            * `TW` - Taiwan, Province of China
            * `TJ` - Tajikistan
            * `TZ` - Tanzania, United Republic of
            * `TH` - Thailand
            * `TL` - Timor-Leste
            * `TG` - Togo
            * `TK` - Tokelau
            * `TO` - Tonga
            * `TT` - Trinidad and Tobago
            * `TN` - Tunisia
            * `TM` - Turkmenistan
            * `TC` - Turks and Caicos Islands
            * `TV` - Tuvalu
            * `TR` - Türkiye
            * `UG` - Uganda
            * `UA` - Ukraine
            * `AE` - United Arab Emirates
            * `GB` - United Kingdom
            * `US` - United States
            * `UM` - United States Minor Outlying Islands
            * `UY` - Uruguay
            * `UZ` - Uzbekistan
            * `VU` - Vanuatu
            * `VE` - Venezuela, Bolivarian Republic of
            * `VN` - Viet Nam
            * `VG` - Virgin Islands, British
            * `VI` - Virgin Islands, U.S.
            * `WF` - Wallis and Futuna
            * `EH` - Western Sahara
            * `YE` - Yemen
            * `ZM` - Zambia
            * `ZW` - Zimbabwe
            * `AX` - Åland Islands
          x-spec-enum-id: 8009381049e5dbe8
        postal_code:
          type: string
          maxLength: 12
      required:
      - city
      - country
      - line1
    Agreement:
      type: object
      description: |-
        Serializer to hold the recurring data information.
        This is required for being able to create recurring payments and the PGs
        require this information.
      properties:
        id:
          type: string
          description: "A unique identifier for the agreement established with the\
            \ payer. This ID links to the specific terms and conditions the payer\
            \ has authorized for processing their stored card details. Use cases include:\
            \ \n1. Recurring Payments: Periodic debits, e.g., gym memberships. \n\
            2. Installment Payments: Multiple charges for a single purchase over time.\
            \ \n3. Unscheduled: Future payments as required, e.g., account top-ups.\
            \ \n4. Industry Practice: Standard business practices related to an original\
            \ payment, e.g., hotel charges after checkout."
          maxLength: 128
        amount_variability:
          enum:
          - fixed
          - variable
          type: string
          x-spec-enum-id: 559f7896c94c0925
          description: |-
            Indicates if all payments within the agreement use the same amount or if the amount differs between the payments.

            * `fixed` - Fixed
            * `variable` - Variable
        start_date:
          type: string
          format: date
          description: Date on which the agreement with the payer to process payments
            starts.
        expiry_date:
          type: string
          format: date
          description: Date on which your agreement with the payer to process payments
            expires.
        max_amount_per_cycle:
          type: string
          format: decimal
          description: The maximum amount for a single payment in the series as agreed
            with the payer.
        cycle_interval_days:
          type: integer
          maximum: 366
          minimum: 1
          description: The minimum number of days between payments agreed with the
            payer.
        total_cycles:
          type: integer
          maximum: 999
          minimum: 1
          description: The number of merchant-initiated payments within the recurring
            payment agreement.
        frequency:
          enum:
          - irregular
          - daily
          - weekly
          - semi_monthly
          - monthly
          - quarterly
          - semi_annually
          - yearly
          - other
          type: string
          x-spec-enum-id: 56e7780f0a9bf9b7
          description: |-
            The frequency of the payments within the series as agreed with the payer.

            * `irregular` - Irregular
            * `daily` - Daily
            * `weekly` - Weekly
            * `semi_monthly` - Semi Monthly
            * `monthly` - Monthly
            * `quarterly` - Quarterly
            * `semi_annually` - Semi Annually
            * `yearly` - Yearly
            * `other` - Other
        type:
          enum:
          - event_based
          - installment
          - recurring
          - unscheduled
          - other
          type: string
          x-spec-enum-id: 385a05a0db56fbbb
          default: recurring
          description: "The type of commercial agreement that the payer has with the\
            \ merchant.\n\n *Note*: For `unscheduled` agreements, the allowed values\
            \ should be configured as follows: \n\n `id` - Accepts any value. \n\n\
            \ `frequency`. \n\n `type`.\n\n This configuration ensures that only specific\
            \ values are permitted for each field when the `type` is `Unscheduled`.\n\
            \n *Note*: For `recurring` agreements, the following fields are mandatory\
            \ as follows: \n\n `amount_variability` \n\n `cycle_interval_days` \n\n\
            \ `expiry_date` \n\n ` `requency` \n\n `id` \n\n  `total_cycles` \n\n\
            \ This configuration ensures that the required values are mandatory for\
            \ each field when the `type` is `Recurring`.\n\n* `event_based` - Event\
            \ Based\n* `installment` - Installment\n* `recurring` - Recurring\n* `unscheduled`\
            \ - Unscheduled\n* `other` - Other"
        seller:
          allOf:
          - $ref: '#/components/schemas/AgreementSeller'
          description: Details about the retailer, if the agreement is for installment
            payments.
        extra_params:
          allOf:
          - $ref: '#/components/schemas/AgreementExtraParams'
          description: Additional parameters related to the agreement.
    AgreementExtraParams:
      type: object
      properties:
        payment_processing_day:
          type: integer
          maximum: 31
          minimum: 1
          description: Day of the month on which the payment must be processed. Not
            required for unscheduled payment agreements.
    AgreementSeller:
      type: object
      properties:
        name:
          type: string
          description: The retailer's trading name.
          maxLength: 128
        short_name:
          type: string
          description: Abbreviation of the retailer's trading name, suitable for payer's
            statement display.
          maxLength: 64
        category_code:
          type: string
          description: A 4-digit code classifying the retailer's business by the type
            of goods or services it offers.
          maxLength: 64
    AmountDetails:
      type: object
      properties:
        currency_code:
          type: string
          readOnly: true
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
        amount:
          type: string
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
          maxLength: 120
        total:
          type: string
          readOnly: true
          description: Denotes the comprehensive total of the payment transaction,
            incorporating both the principal amount and any associated fees.
        fee:
          type: string
          readOnly: true
          description: The `Fee` indicates the sum disbursed by the customer in their
            chosen currency for the payment. Note, this currency could vary from the
            currency used for the transaction.
        exchange_rate:
          type: string
          description: The conversion rate used for currency conversion during payment.
            This value reflects the rate locally calculated.
      required:
      - currency_code
      - fee
      - total
    AttachmentUpload:
      type: object
      properties:
        file:
          type: string
          format: uri
          description: A writable field that accepts an attachment.
          pattern: (?:pdf|jpeg|png|doc|docx|jpg|xls|xlsx|txt)$
        shortify_attachment_url:
          type: boolean
          default: false
          description: If set to `true`, the URL of the uploaded attachment will be
            shortened using a URL shortener service. if configured.This should be
            used when sharing the attachment URL via SMS or WhatsApp. This will only
            work with `session_id` or `order_no`.
        order_no:
          type: string
          description: This is an optional identifier used to specify the payment
            transaction upon which the operation should be performed. You can use
            either the `order_no` or `session_id` field; at least one of these two
            identifiers must be provided to select the payment transaction that should
            be actioned.
          maxLength: 128
        session_id:
          type: string
          description: Similar to `order_no`, `session_id` is an optional identifier
            used to specify the payment transaction for the operation. You must provide
            either `order_no` or `session_id` in order to select the appropriate payment
            transaction.
          maxLength: 128
      required:
      - file
    AttachmentUploadClientErrors:
      oneOf:
      - $ref: '#/components/schemas/AttachmentUploadFailureWithoutTXN'
      - $ref: '#/components/schemas/AttachmentUploadFailureTXNNotFoundOrderNo'
      - $ref: '#/components/schemas/AttachmentUploadFailureTXNNotFoundSessionID'
      - $ref: '#/components/schemas/AttachmentUploadFailureTXNNotBoth'
      - $ref: '#/components/schemas/AttachmentUploadFailureNoFile'
      - $ref: '#/components/schemas/AttachmentUploadFailureWrongExtension'
    AttachmentUploadFailureNoFile:
      type: object
      properties:
        file:
          type: string
          description: No file was submitted.
      required:
      - file
    AttachmentUploadFailureTXNNotBoth:
      type: object
      properties:
        session_id:
          type: string
          description: Please provide only `order_no` or `session_id`, not both.
        order_no:
          type: string
          description: Please provide only `order_no` or `session_id`, not both.
      required:
      - order_no
      - session_id
    AttachmentUploadFailureTXNNotFoundOrderNo:
      type: object
      properties:
        order_no:
          type: string
          description: No PaymentTransaction found with `order_no` of foo.
      required:
      - order_no
    AttachmentUploadFailureTXNNotFoundSessionID:
      type: object
      properties:
        session_id:
          type: string
          description: No PaymentTransaction found with `session_id` of foo.
      required:
      - session_id
    AttachmentUploadFailureWithoutTXN:
      type: object
      properties:
        attachment_short_url:
          type: string
          description: You must provide either `session_id` or `order_no` to identify
            the PaymentTransaction.
      required:
      - attachment_short_url
    AttachmentUploadFailureWrongExtension:
      type: object
      properties:
        file:
          type: string
          description: 'File extension “zip” is not allowed. Allowed extensions are:
            pdf, jpeg, png, doc, docx, jpg, xls, xlsx, txt.'
      required:
      - file
    AttachmentUploadSuccess:
      type: object
      properties:
        file_url:
          type: string
          description: The Relative URL of the uploaded file in the storage. Duplicate
            file names will have a random string attached to the end.
        original_filename:
          type: string
          description: The original name of the uploaded file.
      required:
      - file_url
      - original_filename
    AttachmentUploadSuccessSerializers:
      oneOf:
      - $ref: '#/components/schemas/AttachmentUploadSuccess'
      - $ref: '#/components/schemas/AttachmentUploadSuccessWithShortURL'
    AttachmentUploadSuccessWithShortURL:
      type: object
      properties:
        file_url:
          type: string
          description: The Relative URL of the uploaded file in the storage. Duplicate
            file names will have a random string attached to the end.
        original_filename:
          type: string
          description: The original name of the uploaded file.
        attachment_short_url:
          type: string
          format: uri
          description: The shortened URL of the file. Useful for SMS & WhatsApp.
      required:
      - attachment_short_url
      - file_url
      - original_filename
    AutoDebit:
      type: object
      description: |-
        Auto debit serializer should take session_id and consumer payment token
        then validate if session id is valid
        if session id is valid then validate if payment gateway supports auto debit
        if payment gateway supports auto debit then validate if payment gateway has implemented auto debit
        if payment gateway has implemented auto debit then charge the token and return charge response from client
        auto_debit method which should be implemented in client
      properties:
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
          maxLength: 128
        token:
          type: string
          description: Use this field to provide the unique identifier of a saved
            customer card for processing a payment in the API request.
      required:
      - session_id
      - token
    AutoDebitErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/AutoDebitFailure'
    AutoDebitFailure:
      type: object
      properties:
        detail:
          type: string
          description: Provides a message associated with the operation, suitable
            for displaying to the end user.
        result:
          enum:
          - failed
          type: string
          description: '* `failed` - Failed'
          x-spec-enum-id: 8b493f06ef915a3f
      required:
      - detail
      - result
    Card:
      type: object
      description: Represents token details, only if the user pays with a tokenized
        card, Ottu will include the token details in the response.
      properties:
        brand:
          type: string
          nullable: true
          description: The card brand (e.g., Visa, Mastercard) associated with the
            card. Display this information for customer reference.
          maxLength: 32
        customer_id:
          type: string
          description: The unique identifier for the customer who owns the card
          maxLength: 36
        cvv_required:
          type: boolean
          description: Specifies if the card requires the submission of a CVV for
            transactions. A card without CVV requirement can be used for auto-debit
            or recurring payments.
        expiry_month:
          type: string
          description: The card's expiration month. Provide this information for transaction
            processing and validation.
          maxLength: 2
        expiry_year:
          type: string
          description: The card's expiration year. Provide this information for transaction
            processing and validation.
          maxLength: 2
        is_expired:
          type: boolean
          description: A boolean field indicating whether the card has expired. Use
            this information to determine if the card is valid for transactions and
            to notify the customer if necessary.
        is_preferred:
          type: boolean
          readOnly: true
          description: ' Indicates if the card is the customer''s preferred payment
            option. Order cards with this attribute set to true at the top of the
            list for easy access.'
        name_on_card:
          type: string
          nullable: true
          description: The cardholder's name as it appears on the card. Display this
            information for customer verification.
          maxLength: 64
        number:
          type: string
          nullable: true
          description: The masked card number to be displayed, ensuring customer privacy
            and security while providing essential information.
          maxLength: 19
        pg_code:
          type: string
          description: The `pg_code` associated with the card's creation.
        pg:
          enum:
          - knet
          - cybersource
          - checkoutcom
          - migs
          - dapi
          - burgan
          - paypal
          - mpgs
          - kpay
          - omannet
          - benefit
          - benefit_pay
          - blank
          - cbk
          - fss
          - myfatoorah
          - ngenius
          - ifg
          - ccavenues
          - payu_india
          - cod
          - amazon_pay
          - ottu_pg
          - bookeey
          - upg
          - bambora
          - hyperpay
          - qpay
          - smart_pay
          - sohar
          - nbo
          - tabby
          - tamara
          - hesabe
          - rajhi
          - stc_pay
          - urpay
          - beyon_money
          - upayments
          type: string
          x-spec-enum-id: b8a452040f316c8d
          description: |-
            The payment `gateway` associated with the user's card.

            * `knet` - Knet
            * `cybersource` - CyberSource
            * `checkoutcom` - checkout.com
            * `migs` - MiGS
            * `dapi` - Dapi
            * `burgan` - Burgan
            * `paypal` - PayPal
            * `mpgs` - MPGS
            * `kpay` - KPay
            * `omannet` - OmanNet
            * `benefit` - Benefit
            * `benefit_pay` - BenefitPay
            * `blank` - Blank
            * `cbk` - CBK
            * `fss` - FSS
            * `myfatoorah` - MyFatoorah
            * `ngenius` - N-Genius
            * `ifg` - IATA Financial Gateway
            * `ccavenues` - Ccavenues
            * `payu_india` - PayU India
            * `cod` - Cash
            * `amazon_pay` - Amazon Pay
            * `ottu_pg` - Ottu PG
            * `bookeey` - Bookeey
            * `upg` - UPG
            * `bambora` - Bambora
            * `hyperpay` - HyperPay
            * `qpay` - Qpay
            * `smart_pay` - SmartPay
            * `sohar` - SoharInternational
            * `nbo` - NBO
            * `tabby` - Tabby
            * `tamara` - Tamara
            * `hesabe` - Hesabe
            * `rajhi` - Alrajhi Bank
            * `stc_pay` - STC Pay
            * `urpay` - URPay
            * `beyon_money` - BeyonMoney
            * `upayments` - UPayments
        token:
          type: string
          description: The unique token associated with the card, required for tokenized
            card payments. Use this value to securely process transactions.
          maxLength: 50
        agreements:
          description: List of agreements associated with this card.
      required:
      - agreements
      - brand
      - customer_id
      - cvv_required
      - expiry_month
      - expiry_year
      - is_expired
      - is_preferred
      - name_on_card
      - number
      - pg
      - pg_code
      - token
    CardAcceptanceCriteria:
      type: object
      properties:
        min_expiry_time:
          type: integer
          maximum: 365
          minimum: 1
          description: |-
            Specifies the minimum required validity period, in days, for a card to be eligible for payment. If set to 30 days, for example, cards set to expire within the next month would be declined. This ensures short-lived cards nearing their expiration date are filtered out, reducing chances of payment failures. When implementing, balance your operational needs with customer convenience. Setting it too stringent might increase payment declines, while a lenient approach could risk future payment failures.

            Additionally, it defaults to 30 days when the `payment_type` is `auto_debit`. If any other payment type is selected, no default value is set.
    CardErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/GenericErrorMessage'
    Cash acknowledgement Errors:
      oneOf:
      - $ref: '#/components/schemas/GenericErrorMessage'
      - $ref: '#/components/schemas/FieldErrors'
    CashPayment:
      type: object
      description: |-
        Serializer for acknowledging cash payments.

        Inherits from BaseTxnLookupSerializer, which provides the logic for retrieving
        a PaymentTransaction object based on the provided session ID.
      properties:
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
          maxLength: 128
      required:
      - session_id
    CheckoutPOSTRequest:
      type: object
      description: |-
        Serializer to work with PaymentTransaction instances.

        Also uses request data from other serializers to save into PaymentTransaction db table:
      properties:
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
        pg_codes:
          type: array
          items:
            type: string
          title: Gateway
          description: The list of payment gateway codes from which a customer can
            select to perform the payment or authorization.
        type:
          enum:
          - e_commerce
          - payment_request
          type: string
          x-spec-enum-id: ad398830c7970f0a
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - Ecommerce
            * `payment_request` - Payment Request
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        agreement:
          allOf:
          - $ref: '#/components/schemas/Agreement'
          description: "An established contractual arrangement with the payer, which\
            \ authorizes you to securely store and subsequently utilize their payment\
            \ information for specific purposes. This could encompass arrangements\
            \ like recurring payments for services such as mobile subscriptions, installment-based\
            \ payments for purchases, arrangements for ad-hoc charges like account\
            \ top-ups, or for standard industry practices like penalty charges for\
            \ missed appointments. \n\nNote: If your intention is solely to store\
            \ payment details for transactions initiated by the payer in the future,\
            \ then this parameter group should not be used."
        attachment:
          type: string
          format: uri
          description: 'A writable field that accepts an attachment file to be included
            in email notifications sent to the customer regarding their payment, and
            also be available for download on the checkout page. This field may be
            used to provide the customer with additional information or documentation
            related to their purchase. The value of this field should be a file object.
            Upon successful submission, the API will return the URL for downloading
            the attached file. '
        attachment_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
        attachment_upload_url:
          type: string
          description: A writable field that accepts an attachment that has already
            been uploaded to the server.
          pattern: (?:pdf|jpeg|png|doc|docx|jpg|xls|xlsx|txt)$
        card_acceptance_criteria:
          allOf:
          - $ref: '#/components/schemas/CardAcceptanceCriteria'
          description: |-
            This field allows you to define specific rules and conditions that a card must meet to be eligible for payment. These stipulations apply regardless of whether a customer chooses to pay using a saved card or opts to add a new card for the transaction. By leveraging the `card_acceptance_criteria`, you gain the power to fine-tune your payment processing strategy, tailoring acceptance rules to align with your business needs, security standards, and risk management policies.

            **Example**: If you run an exclusive service that caters predominantly to premium customers, you might set criteria that only allow transactions from high-tier credit cards like VISA Platinum. This ensures that payments align with the exclusivity and branding of your services. Remember to configure these criteria thoughtfully. Striking the right balance between security, risk mitigation, and user experience is paramount.

            **Note**: The `card_acceptance_criteria` field is applicable only for direct payments and not for hosted session payments.
        checkout_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment. This field is only available
            if the `shortify_checkout_url` field is set to True.
        checkout_url:
          type: string
          format: uri
          readOnly: true
          description: URL that directs the customer to the Ottu Checkout Page where
            they can see the payment details and available payment methods for the
            transaction. If you need to share the payment link over SMS or WhatsApp,
            use `checkout_short_url` instead.
        customer_email:
          type: string
          format: email
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        due_datetime:
          type: string
          format: date-time
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        email_recipients:
          type: array
          items:
            type: string
            format: email
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        expiration_time:
          type: string
          description: If defined, any payment transactions created more than the
            specified period of time ago will be invalidated or expired if the customer
            attempts to complete them. By default, this expiration period is set to
            24 hours from the time of transaction creation. This feature helps ensure
            that payment transactions are processed promptly.
        generate_qr_code:
          type: boolean
          writeOnly: true
          default: false
          description: If set to true, the `qr_code_url` field will be present in
            the response. Upon scanning it, the customer will be redirected to the
            checkout_url, which is the Ottu Checkout page.
        include_sdk_setup_preload:
          type: boolean
          writeOnly: true
          default: false
          description: Set this to true to include the 'sdk_setup_preload_payload'
            payload in the API response. This payload is only generated and added
            when this parameter is explicitly set to true. By default, it is false
            and the 'sdk_setup_preload_payload' payload will not be included.
        initiator_id:
          type: integer
          title: initiator
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was using
            API Key auth initiator_id can be set to any value that corresponds to
            an existing ACTIVE user in the system
        language:
          enum:
          - en
          - ar
          type: string
          x-spec-enum-id: 41ab03839742157c
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to `purchase`, the payment source will be directly charged.
            If set to `authorize`, the payment source will only be authorized and
            the actual charge will be made at a later time.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        payment_methods:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodsForRedirect'
          readOnly: true
          description: An array containing all the payment methods derived from the
            `pg_codes` input. Each object in the array contains information about
            a single payment gateway, including its icon and the `redirect_url` that
            will redirect the customer to the payment gateway's payment page.
        payment_type:
          enum:
          - one_off
          - auto_debit
          - save_card
          type: string
          x-spec-enum-id: ac40d7871ffc8132
          default: one_off
          description: "Type of payment. Choose `one_off` for payments that occur\
            \ only once without future commitments. Choose `auto_debit` for payments\
            \ that are automatically deducted, such as recurring subscriptions, installments,\
            \ or unscheduled auto-debits. \n\nChoose `save_card` if you want to perform\
            \ a card tokenization operation.\n\nNOTE: If `auto_debit` is selected:\
            \ \n1. `agreement` and `customer_id` parameters will also be mandatory.\
            \ \n2. Only PG codes supporting tokenization can be selected. \nAs a side\
            \ effect, the card used for the payment will be associated with the supplied\
            \ `agreement.id`. This card will be locked, preventing the customer from\
            \ deleting it from the system until an alternate card is chosen for auto-debit\
            \ payments.\n\nNOTE: If `save_card` is selected: \n1. The amount must\
            \ be zero for the save card operation. \n2. The selected MID(pg_code)\
            \ must support tokenization to enable the save card operation. \n3. Please\
            \ note that the save card operation is considered successful without any\
            \ funds being charged.\n4. Once a card is created, Ottu will send a webhook\
            \ containing the card details to the merchant's webhook URL.\n\n\n* `one_off`\
            \ - One Off\n* `auto_debit` - Auto Debit\n* `save_card` - Save Card"
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        qr_code_url:
          type: string
          format: uri
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status. `order_no`, `reference_number`
            and `session_id` will be appended to the redirect URL as query parameters.
          maxLength: 200
        sdk_setup_preload_payload:
          allOf:
          - $ref: '#/components/schemas/CheckoutSDK'
          readOnly: true
          default: false
          description: A JSON object containing preloaded data required to initialize
            the checkout interface.This includes essential details such as customer
            information, available payment methods.and specific transaction details,
            all formatted according to the Checkout SDK's initialization specifications.This
            field streamlines the checkout process by providing necessary information
            upfront.enhancing user experience and efficiency.
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        settled_pg_code:
          type: string
          readOnly: true
          title: Final Payment Gateway
          description: The code of the payment gateway used for completing the transaction.
            This field indicates the specific gateway that processed and settled the
            payment, providing clarity on which payment service was ultimately utilized
            for this transaction.
        shortify_attachment_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the URL of the uploaded attachment will be
            shortened using a URL shortener service. This should be used when sharing
            the attachment URL via SMS or WhatsApp.
        shortify_checkout_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the checkout URL will be shortened using a
            URL shortener service. This should be used when sharing the payment URL
            via SMS or WhatsApp.
        state:
          enum:
          - created
          - pending
          - attempted
          - authorized
          - paid
          - failed
          - canceled
          - expired
          - invalided
          - refunded
          - cod
          type: string
          x-spec-enum-id: 8f97a962a4efdeb1
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        unit_code:
          type: string
          writeOnly: true
          title: Unit
          description: The slug of the unit to be used for the transaction.
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
      required:
      - amount
      - attachment_short_url
      - checkout_short_url
      - checkout_url
      - currency_code
      - operation
      - payment_methods
      - pg_codes
      - qr_code_url
      - sdk_setup_preload_payload
      - session_id
      - settled_pg_code
      - state
      - type
    CheckoutPOSTResponse:
      type: object
      description: |-
        Serializer to work with PaymentTransaction instances.

        Also uses request data from other serializers to save into PaymentTransaction db table:
      properties:
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
        pg_codes:
          type: array
          items:
            type: string
          title: Gateway
          description: The list of payment gateway codes from which a customer can
            select to perform the payment or authorization.
        type:
          enum:
          - e_commerce
          - payment_request
          type: string
          x-spec-enum-id: ad398830c7970f0a
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - Ecommerce
            * `payment_request` - Payment Request
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        agreement:
          allOf:
          - $ref: '#/components/schemas/Agreement'
          description: "An established contractual arrangement with the payer, which\
            \ authorizes you to securely store and subsequently utilize their payment\
            \ information for specific purposes. This could encompass arrangements\
            \ like recurring payments for services such as mobile subscriptions, installment-based\
            \ payments for purchases, arrangements for ad-hoc charges like account\
            \ top-ups, or for standard industry practices like penalty charges for\
            \ missed appointments. \n\nNote: If your intention is solely to store\
            \ payment details for transactions initiated by the payer in the future,\
            \ then this parameter group should not be used."
        attachment:
          type: string
          format: uri
          description: 'A writable field that accepts an attachment file to be included
            in email notifications sent to the customer regarding their payment, and
            also be available for download on the checkout page. This field may be
            used to provide the customer with additional information or documentation
            related to their purchase. The value of this field should be a file object.
            Upon successful submission, the API will return the URL for downloading
            the attached file. '
        attachment_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
        attachment_upload_url:
          type: string
          description: A writable field that accepts an attachment that has already
            been uploaded to the server.
          pattern: (?:pdf|jpeg|png|doc|docx|jpg|xls|xlsx|txt)$
        card_acceptance_criteria:
          allOf:
          - $ref: '#/components/schemas/CardAcceptanceCriteria'
          description: |-
            This field allows you to define specific rules and conditions that a card must meet to be eligible for payment. These stipulations apply regardless of whether a customer chooses to pay using a saved card or opts to add a new card for the transaction. By leveraging the `card_acceptance_criteria`, you gain the power to fine-tune your payment processing strategy, tailoring acceptance rules to align with your business needs, security standards, and risk management policies.

            **Example**: If you run an exclusive service that caters predominantly to premium customers, you might set criteria that only allow transactions from high-tier credit cards like VISA Platinum. This ensures that payments align with the exclusivity and branding of your services. Remember to configure these criteria thoughtfully. Striking the right balance between security, risk mitigation, and user experience is paramount.

            **Note**: The `card_acceptance_criteria` field is applicable only for direct payments and not for hosted session payments.
        checkout_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment. This field is only available
            if the `shortify_checkout_url` field is set to True.
        checkout_url:
          type: string
          format: uri
          readOnly: true
          description: URL that directs the customer to the Ottu Checkout Page where
            they can see the payment details and available payment methods for the
            transaction. If you need to share the payment link over SMS or WhatsApp,
            use `checkout_short_url` instead.
        customer_email:
          type: string
          format: email
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        due_datetime:
          type: string
          format: date-time
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        email_recipients:
          type: array
          items:
            type: string
            format: email
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        expiration_time:
          type: string
          description: If defined, any payment transactions created more than the
            specified period of time ago will be invalidated or expired if the customer
            attempts to complete them. By default, this expiration period is set to
            24 hours from the time of transaction creation. This feature helps ensure
            that payment transactions are processed promptly.
        generate_qr_code:
          type: boolean
          writeOnly: true
          default: false
          description: If set to true, the `qr_code_url` field will be present in
            the response. Upon scanning it, the customer will be redirected to the
            checkout_url, which is the Ottu Checkout page.
        include_sdk_setup_preload:
          type: boolean
          writeOnly: true
          default: false
          description: Set this to true to include the 'sdk_setup_preload_payload'
            payload in the API response. This payload is only generated and added
            when this parameter is explicitly set to true. By default, it is false
            and the 'sdk_setup_preload_payload' payload will not be included.
        initiator_id:
          type: integer
          title: initiator
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was using
            API Key auth initiator_id can be set to any value that corresponds to
            an existing ACTIVE user in the system
        language:
          enum:
          - en
          - ar
          type: string
          x-spec-enum-id: 41ab03839742157c
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to `purchase`, the payment source will be directly charged.
            If set to `authorize`, the payment source will only be authorized and
            the actual charge will be made at a later time.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        payment_methods:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodsForRedirect'
          readOnly: true
          description: An array containing all the payment methods derived from the
            `pg_codes` input. Each object in the array contains information about
            a single payment gateway, including its icon and the `redirect_url` that
            will redirect the customer to the payment gateway's payment page.
        payment_type:
          enum:
          - one_off
          - auto_debit
          - save_card
          type: string
          x-spec-enum-id: ac40d7871ffc8132
          default: one_off
          description: "Type of payment. Choose `one_off` for payments that occur\
            \ only once without future commitments. Choose `auto_debit` for payments\
            \ that are automatically deducted, such as recurring subscriptions, installments,\
            \ or unscheduled auto-debits. \n\nChoose `save_card` if you want to perform\
            \ a card tokenization operation.\n\nNOTE: If `auto_debit` is selected:\
            \ \n1. `agreement` and `customer_id` parameters will also be mandatory.\
            \ \n2. Only PG codes supporting tokenization can be selected. \nAs a side\
            \ effect, the card used for the payment will be associated with the supplied\
            \ `agreement.id`. This card will be locked, preventing the customer from\
            \ deleting it from the system until an alternate card is chosen for auto-debit\
            \ payments.\n\nNOTE: If `save_card` is selected: \n1. The amount must\
            \ be zero for the save card operation. \n2. The selected MID(pg_code)\
            \ must support tokenization to enable the save card operation. \n3. Please\
            \ note that the save card operation is considered successful without any\
            \ funds being charged.\n4. Once a card is created, Ottu will send a webhook\
            \ containing the card details to the merchant's webhook URL.\n\n\n* `one_off`\
            \ - One Off\n* `auto_debit` - Auto Debit\n* `save_card` - Save Card"
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        qr_code_url:
          type: string
          format: uri
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status. `order_no`, `reference_number`
            and `session_id` will be appended to the redirect URL as query parameters.
          maxLength: 200
        sdk_setup_preload_payload:
          allOf:
          - $ref: '#/components/schemas/CheckoutSDK'
          readOnly: true
          default: false
          description: A JSON object containing preloaded data required to initialize
            the checkout interface.This includes essential details such as customer
            information, available payment methods.and specific transaction details,
            all formatted according to the Checkout SDK's initialization specifications.This
            field streamlines the checkout process by providing necessary information
            upfront.enhancing user experience and efficiency.
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        settled_pg_code:
          type: string
          readOnly: true
          title: Final Payment Gateway
          description: The code of the payment gateway used for completing the transaction.
            This field indicates the specific gateway that processed and settled the
            payment, providing clarity on which payment service was ultimately utilized
            for this transaction.
        shortify_attachment_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the URL of the uploaded attachment will be
            shortened using a URL shortener service. This should be used when sharing
            the attachment URL via SMS or WhatsApp.
        shortify_checkout_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the checkout URL will be shortened using a
            URL shortener service. This should be used when sharing the payment URL
            via SMS or WhatsApp.
        state:
          enum:
          - created
          - pending
          - attempted
          - authorized
          - paid
          - failed
          - canceled
          - expired
          - invalided
          - refunded
          - cod
          type: string
          x-spec-enum-id: 8f97a962a4efdeb1
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        unit_code:
          type: string
          writeOnly: true
          title: Unit
          description: The slug of the unit to be used for the transaction.
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
      required:
      - amount
      - attachment_short_url
      - checkout_short_url
      - checkout_url
      - currency_code
      - operation
      - payment_methods
      - pg_codes
      - qr_code_url
      - sdk_setup_preload_payload
      - session_id
      - settled_pg_code
      - state
      - type
    CheckoutSDK:
      type: object
      description: |-
        Serialize data for SDK init.
        The SDK will use this data to initialize the payment process and
        to display the payment methods.
      properties:
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        cards:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of saved tokenized cards for customer payments, which
            can be used for transactions. Render alongside `payment_methods` for customers
            to choose from.
          readOnly: true
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
        language:
          enum:
          - en
          - ar
          type: string
          x-spec-enum-id: 41ab03839742157c
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to `purchase`, the payment source will be directly charged.
            If set to `authorize`, the payment source will only be authorized and
            the actual charge will be made at a later time.
        payment_methods:
          type: array
          items: {}
          description: "The provided documentation describes the `payment_methods`\
            \ field.\n\n Detailing the types of payment methods included and their\
            \ functionality \nas well as backward compatibility considerations for\
            \ removed methods. \n\nThe `payment_methods` field includes various payment\
            \ options available to customers\nexcluding device-specific methods like\
            \ `apple_pay`, `google_pay`and `flex_methods` represented in flex methods\
            \ section\nit primarily supports methods requiring a redirect flow\nwhere\
            \ users complete transactions on an external webpage.\n\n`Functionality`:\
            \ users are redirected to an external \nsite mostly to gateway payment\
            \ page \nusing `redirect_url` where they can complete the payment flow\n\
            \n**The dynamic nature of the payment_methods**:`payment_methods` type\
            \ is an array of objects \nand it's type allows it to accommodate an unlimited\
            \ variety of payment options\nas each object represents a gateway payment\
            \ option but strictly associated to redirect payment flow\n\n**Backward\
            \ Compatibility Notice:**\n\n`stc_pay`: \nprevious Inclusion, `stc_pay`\
            \ was formerly listed within the `payment_methods` array\nit has been\
            \ removed in favor of a more streamlined integration within the SDK\n\
            similar to the approach for `payment_services`.\n\n**Backward Compatibility:**\
            \ \n\nThe SDK must still support STC Pay for applications relying on older\
            \ API versions.\nAlthough it will not appear in current and future versions\n\
            the SDK will manage its inclusion internally\n\nto ensure a seamless transition\
            \ and consistent user experience\nacross different API versions, without\
            \ disrupting existing integrations.\n"
          readOnly: true
        payment_services:
          type: array
          items: {}
          description: "Dedicated to singular, prominently featured payment options\n\
            \nsuch as `apple_pay`, `google_pay`, `samsung_pay`, `stc_pay`, etc.,\n\
            the `payment_services` field presents these methods in a distinctive manner.\n\
            \nUnlike `payment_methods`, payment services are intended to be displayed\
            \ uniquely,\nTypically represented by dedicated buttons or interfaces\
            \ within the payment page.\n\nThis ensures that each payment service,\n\
            identifiable by its unique flow ie: (`apple_pay`, `stc_pay`)\nis presented\
            \ no more than once to the user\nmaintaining clarity and simplicity in\
            \ the payment selection process.\n\n**Backward Compatibility Notice**:\n\
            historically, the availability of (`apple_pay`, `google_pay`) \nwas indicated\
            \ through the `apple_pay_available` and `google_pay_available` flags\n\
            at the root level of the API response.\n\nWith the evolution of the API,\
            \ these flags have been deprecated, \nand the respective payment methods\
            \ have been integrated into the `payment_services` array.\n\nDespite this\
            \ restructuring, backward compatibility for these payment methods\nis\
            \ preserved in the SDK to accommodate previous API versions,\nensuring\
            \ a seamless transition for existing implementations.\n"
          readOnly: true
        flex_methods:
          type: array
          items: {}
          description: |
            The `flex_methods` field encompasses a comprehensive array
            of payment options available to customers,
            explicitly excluding device-specific methods such as `apple_pay`
            `google_pay`, redirect flow `payment_methods` and tokenized card solutions
            otherwise it represents the flexible payment methods ie:(`tamara`, `tabby`)
            payment options that necessitate dynamic flows
            where SDK might need to fetch some `pre-payment-check` API calls then
            users are guided to an external webpage to finalize their payment transactions.

            It's important to note that the flex_methods array is dynamic
            and can accommodate an unlimited array of payment methods.
            each method listed should be individually rendered within the user interface with a separated flow.
          readOnly: true
        response:
          type: object
          additionalProperties: {}
          description: "**What is a payment gateway response?**\n\nA payment gateway\
            \ response is the feedback received\nfrom payment gateway after a user\
            \ has completed a payment\nthis response provides information on whether\
            \ the payment was successful or if it was canceled or failed.\n\n**When\
            \ do we receive the response?**\n\nWe receive the payment gateway response\
            \ immediately after the user has made a payment\nor after n of minutes\
            \ defined for a gateway inquiry request initiated by ottu core\nto fetch\
            \ the transaction status after the defined time for each gateway.\n\n\
            **Which attempt do we get the response for?**\n\nthe response we provide\
            \ is from the most recent payment attempt.\nthis ensures that the information\
            \ reflects the latest status of the transaction.\n\n**Structure of the\
            \ response**: \n\nThe response structure is managed by our SDK,\nwhich\
            \ updates the payment details and triggers one of three callbacks\nbased\
            \ on the status provided in the response:\n\n`successCallback`: Triggered\
            \ if the response.status indicates a successful payment.\n\n`cancelCallback`:\
            \ Triggered if the response.status indicates a canceled payment.\n\n`errorCallback`:\
            \ Triggered if the response.status indicates a error payment.\n\n"
          readOnly: true
        state:
          enum:
          - created
          - pending
          - attempted
          - authorized
          - paid
          - failed
          - canceled
          - expired
          - invalided
          - refunded
          - cod
          type: string
          x-spec-enum-id: 8f97a962a4efdeb1
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        type:
          enum:
          - e_commerce
          - payment_request
          type: string
          x-spec-enum-id: ad398830c7970f0a
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - Ecommerce
            * `payment_request` - Payment Request
        is_amount_editable:
          type: boolean
          readOnly: true
          title: Editable amount
          description: This field specifies whether the customer can modify the payment
            amount and choose the amount he wishes to pay.
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        cancel_url:
          type: string
          readOnly: true
          description: "This endpoint used to cancel the transaction using the merchant\
            \ cancellation flow, \nto ensure the transaction cannot be paid again\
            \ \nand trigger the webhook notification \n"
      required:
      - amount
      - cancel_url
      - cards
      - currency_code
      - flex_methods
      - is_amount_editable
      - operation
      - payment_methods
      - payment_services
      - response
      - session_id
      - state
      - type
    ChildPayment:
      type: object
      properties:
        amount:
          type: string
          readOnly: true
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
          maxLength: 3
          minLength: 3
        order_no:
          type: string
          nullable: true
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
          maxLength: 128
        state:
          enum:
          - paid
          - refunded
          - refund_queued
          - refund_rejected
          - voided
          type: string
          x-spec-enum-id: 07c35814d3cce8c3
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `paid` - paid
            * `refunded` - refunded
            * `refund_queued` - refund_queued
            * `refund_rejected` - refund_rejected
            * `voided` - voided
      required:
      - amount
      - currency_code
    ClientErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/NestedFieldErrors'
      - $ref: '#/components/schemas/GenericErrorMessage'
    ExternalOperation:
      type: object
      properties:
        amount:
          type: string
          readOnly: true
          description: The specific amount for which the operation was performed.
        session_id:
          type: string
          description: The session ID of the parent transaction will be included in
            the webhook payload. This session ID is crucial for associating the webhook
            event with the original transaction, allowing for accurate tracking and
            processing.
          readOnly: true
        order_no:
          type: string
          description: The 'order_no' field indicates the unique order number of the
            parent transaction. This identifier is crucial for tracking and managing
            the related order within its entire lifecycle.
          readOnly: true
        initiator:
          allOf:
          - $ref: '#/components/schemas/InitiatorUser'
          description: If the operation was performed using Basic Auth (and not an
            API Key), this field contains the details of the `initiator` who started
            the operation.
        is_sandbox:
          type: boolean
          title: Is Sandbox?
          description: Indicates whether the operation was performed in a test environment
            or not.
        operation:
          enum:
          - capture
          - refund
          - void
          type: string
          description: Identifies the operation that was executed.
          x-spec-enum-id: 6fdf34a272fc404b
          readOnly: true
        pg_code:
          type: string
          description: Represents the `pg_code` of the Payment Gateway settings which
            was used to perform the operation.
        pg_response:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Contains the raw response from the payment gateway (PG) for
            the operation (`pg_response`). It will always be a valid JSON.
        reference_number:
          type: string
          readOnly: true
          description: A unique reference_number assigned by Ottu for the performed
            operation. It's also sent to the PG and can be used as a reconciliation
            parameter.
        source:
          enum:
          - input
          - pg
          type: string
          description: Can have one of two values - `input` or `pg`. If `input`, it
            means the operation was performed in an API call triggered by the merchant.
            If `pg`, it means the operation was done on the PG management dashboard,
            and the PG notified Ottu via webhook. The `pg` value will always be notified
            to the webhook, never in an API call.
          x-spec-enum-id: 11ceda8d7147f99f
          readOnly: true
        success:
          type: boolean
          readOnly: true
          description: Indicates whether the operation was successful or not (`success=True`
            or `success=False`).
        result:
          enum:
          - success
          - failed
          type: string
          description: The result of the operation - whether it was successful or
            not.
          x-spec-enum-id: 9dcf9586c08229f1
          readOnly: true
        signature:
          type: string
          readOnly: true
          description: 'Signature Field: A cryptographic hash used to guarantee data
            integrity and authenticity during client-server exchanges. This hash ensures
            that the API payload has not been tampered with, and can only be verified
            by authorized parties.'
        timestamp_utc:
          type: string
          format: date-time
          description: Specifies the time when the operation was performed, in the
            UTC timezone.
        txn:
          allOf:
          - $ref: '#/components/schemas/ChildPayment'
          readOnly: true
          description: Every operation results in the creation of a payment transaction
            (`txn`), which is a child of the payment transaction against which the
            operation is performed. This child transaction holds all the details of
            the operation.
      required:
      - amount
      - operation
      - order_no
      - pg_response
      - reference_number
      - result
      - session_id
      - signature
      - source
      - success
      - timestamp_utc
      - txn
    FieldErrors:
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
            default: This field is required.
    GenericErrorMessage:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    InitiatorUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 32
        last_name:
          type: string
          maxLength: 32
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone:
          type: string
          title: Phone number
          maxLength: 128
      required:
      - email
      - id
      - username
    InquiryErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/InquiryFailure'
    InquiryFailure:
      type: object
      properties:
        detail:
          type: string
          description: Provides a message associated with the operation, suitable
            for displaying to the end user.
        result:
          enum:
          - failed
          type: string
          description: '* `failed` - Failed'
          x-spec-enum-id: 8b493f06ef915a3f
      required:
      - detail
      - result
    InquiryRequest:
      type: object
      description: This serializer is used to validate the lookup fields for the inquiry
        operation.
      properties:
        order_no:
          type: string
          description: This is an optional identifier used to specify the payment
            transaction upon which the operation should be performed. You can use
            either the `order_no` or `session_id` field; at least one of these two
            identifiers must be provided to select the payment transaction that should
            be actioned.
          maxLength: 128
        session_id:
          type: string
          description: Similar to `order_no`, `session_id` is an optional identifier
            used to specify the payment transaction for the operation. You must provide
            either `order_no` or `session_id` in order to select the appropriate payment
            transaction.
          maxLength: 128
    InternalOperation:
      type: object
      properties:
        detail:
          type: string
          description: Provides a message associated with the operation, suitable
            for displaying to the end user.
        operation:
          enum:
          - refund
          - void
          - capture
          - delete
          - cancel
          - expire
          type: string
          x-spec-enum-id: 67901254cbbc0a03
          description: |-
            Specifies the executed operation. It can be either `delete`, `cancel`, or `expire`.

            * `refund` - Refund
            * `void` - Void
            * `capture` - Capture
            * `delete` - Delete
            * `cancel` - Cancel
            * `expire` - Expire
        result:
          enum:
          - success
          - failed
          type: string
          x-spec-enum-id: d0105e57b1d0f814
          description: |-
            Indicates the outcome of the operation. `success` denotes a successful operation.

            * `success` - Success
            * `failed` - Failed
      required:
      - detail
      - operation
      - result
    InvoiceClientErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/NestedFieldErrors'
      - $ref: '#/components/schemas/GenericErrorMessage'
    InvoiceItem:
      type: object
      description: |-
        Serializer to use for `InvoiceItem` instances.

        The unit_price, quantity, description and sku fields are required.
        The rest are optional.

        The class includes a method to calculate the discount on the invoice and another to calculate the total values.
      properties:
        id:
          type: integer
          readOnly: true
        invoice:
          type: integer
          nullable: true
          description: Associated invoice.
        sku:
          type: string
          description: Unique identifier for the invoice item.
          maxLength: 255
        description:
          type: string
          description: Product name or a brief description of the item.
          maxLength: 255
        quantity:
          type: string
          format: decimal
          description: Number of units of the product.
        unit_price:
          type: string
          format: decimal
          description: Price per unit of the product, excluding tax.
        tax_rate:
          type: string
          format: decimal
          description: Tax rate applied to the invoice item.
        tax_amount:
          type: string
          format: decimal
          description: Total tax amount for the invoice item.
        discount_percentage:
          type: string
          format: decimal
          description: Percentage-based discount applied to the invoice item. The
            calculated discount cannot exceed theitem's total value, including tax.
        discount_amount:
          type: string
          format: decimal
          description: Fixed amount discount applied to the invoice item. The discount
            cannot exceed the item's total value, including tax.
        total_excl_tax:
          type: string
          format: decimal
          description: Total value of the invoice item, excluding tax. This is calculated
            as (unit_price * quantity) - discount.
        total_incl_tax:
          type: string
          format: decimal
          description: Total value of the invoice item, including tax. This is calculated
            as (unit_price * quantity) - discount + applicable tax.
        currency_code:
          type: string
          description: 'For internal purposes: it''ll be overridden by the main currency_code'
      required:
      - currency_code
      - description
      - id
      - quantity
      - sku
      - unit_price
    InvoicePOSTRequest:
      type: object
      description: |-
        Serializer class for `Invoice` instances, inheriting from `BaseInvoiceSerializer` and
        `CheckoutSerializer`. It provides methods for creating invoices, invoice items, and transactions.
      properties:
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
        due_date:
          type: string
          format: date
          description: The date by which the customer is expected to make payment
            for the invoice.
        invoice_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
          description: The list of items for the invoice.
        invoice_number:
          type: string
          description: A unique identifier for the invoice, typically used for tracking
            and referencing purposes.
          maxLength: 255
        pg_codes:
          type: array
          items:
            type: string
          title: Gateway
          description: The list of payment gateway codes from which a customer can
            select to perform the payment
        type:
          enum:
          - e_commerce
          - payment_request
          type: string
          x-spec-enum-id: ad398830c7970f0a
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - Ecommerce
            * `payment_request` - Payment Request
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        agreement:
          allOf:
          - $ref: '#/components/schemas/Agreement'
          description: "An established contractual arrangement with the payer, which\
            \ authorizes you to securely store and subsequently utilize their payment\
            \ information for specific purposes. This could encompass arrangements\
            \ like recurring payments for services such as mobile subscriptions, installment-based\
            \ payments for purchases, arrangements for ad-hoc charges like account\
            \ top-ups, or for standard industry practices like penalty charges for\
            \ missed appointments. \n\nNote: If your intention is solely to store\
            \ payment details for transactions initiated by the payer in the future,\
            \ then this parameter group should not be used."
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        attachment:
          type: string
          format: uri
          description: 'A writable field that accepts an attachment file to be included
            in email notifications sent to the customer regarding their payment, and
            also be available for download on the checkout page. This field may be
            used to provide the customer with additional information or documentation
            related to their purchase. The value of this field should be a file object.
            Upon successful submission, the API will return the URL for downloading
            the attached file. '
        attachment_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
        attachment_upload_url:
          type: string
          description: A writable field that accepts an attachment that has already
            been uploaded to the server.
          pattern: (?:pdf|jpeg|png|doc|docx|jpg|xls|xlsx|txt)$
        card_acceptance_criteria:
          allOf:
          - $ref: '#/components/schemas/CardAcceptanceCriteria'
          description: |-
            This field allows you to define specific rules and conditions that a card must meet to be eligible for payment. These stipulations apply regardless of whether a customer chooses to pay using a saved card or opts to add a new card for the transaction. By leveraging the `card_acceptance_criteria`, you gain the power to fine-tune your payment processing strategy, tailoring acceptance rules to align with your business needs, security standards, and risk management policies.

            **Example**: If you run an exclusive service that caters predominantly to premium customers, you might set criteria that only allow transactions from high-tier credit cards like VISA Platinum. This ensures that payments align with the exclusivity and branding of your services. Remember to configure these criteria thoughtfully. Striking the right balance between security, risk mitigation, and user experience is paramount.

            **Note**: The `card_acceptance_criteria` field is applicable only for direct payments and not for hosted session payments.
        checkout_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment. This field is only available
            if the `shortify_checkout_url` field is set to True.
        checkout_url:
          type: string
          format: uri
          readOnly: true
          description: URL that directs the customer to the Ottu Checkout Page where
            they can see the payment details and available payment methods for the
            transaction. If you need to share the payment link over SMS or WhatsApp,
            use `checkout_short_url` instead.
        company_name:
          type: string
          description: The company name is used for invoice API.
          maxLength: 64
        customer_email:
          type: string
          format: email
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        discount_amount:
          type: string
          format: decimal
          description: The fixed amount discount applied to the full invoice amount,
            including taxes. If set, the discount_percentage field will be set to
            null. Both discount_amount and discount_percentage cannot be set simultaneously.
            The discount cannot be higher than the `total_excl_tax` field.
        discount_percentage:
          type: string
          format: decimal
          description: The percentage-based discount applied to the full invoice amount,
            including taxes. If set, the discount_amount field will be automatically
            calculated. Both discount_amount and discount_percentage cannot be set
            simultaneously. The discount cannot be higher than the `total_excl_tax`
            field.
        due_datetime:
          type: string
          format: date-time
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        email_recipients:
          type: array
          items:
            type: string
            format: email
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        expiration_time:
          type: string
          description: If defined, any payment transactions created more than the
            specified period of time ago will be invalidated or expired if the customer
            attempts to complete them. By default, this expiration period is set to
            24 hours from the time of transaction creation. This feature helps ensure
            that payment transactions are processed promptly.
        generate_qr_code:
          type: boolean
          writeOnly: true
          default: false
          description: If set to true, the `qr_code_url` field will be present in
            the response. Upon scanning it, the customer will be redirected to the
            checkout_url, which is the Ottu Checkout page.
        include_sdk_setup_preload:
          type: boolean
          writeOnly: true
          default: false
          description: Set this to true to include the 'sdk_setup_preload_payload'
            payload in the API response. This payload is only generated and added
            when this parameter is explicitly set to true. By default, it is false
            and the 'sdk_setup_preload_payload' payload will not be included.
        initiator_id:
          type: integer
          title: initiator
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was using
            API Key auth initiator_id can be set to any value that corresponds to
            an existing ACTIVE user in the system
        invoice_id:
          type: integer
          readOnly: true
        language:
          enum:
          - en
          - ar
          type: string
          x-spec-enum-id: 41ab03839742157c
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to `purchase`, the payment source will be directly charged.
            If set to `authorize`, the payment source will only be authorized and
            the actual charge will be made at a later time.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        payment_methods:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodsForRedirect'
          readOnly: true
          description: An array containing all the payment methods derived from the
            `pg_codes` input. Each object in the array contains information about
            a single payment gateway, including its icon and the `redirect_url` that
            will redirect the customer to the payment gateway's payment page.
        payment_type:
          enum:
          - one_off
          - auto_debit
          - save_card
          type: string
          x-spec-enum-id: ac40d7871ffc8132
          default: one_off
          description: "Type of payment. Choose `one_off` for payments that occur\
            \ only once without future commitments. Choose `auto_debit` for payments\
            \ that are automatically deducted, such as recurring subscriptions, installments,\
            \ or unscheduled auto-debits. \n\nChoose `save_card` if you want to perform\
            \ a card tokenization operation.\n\nNOTE: If `auto_debit` is selected:\
            \ \n1. `agreement` and `customer_id` parameters will also be mandatory.\
            \ \n2. Only PG codes supporting tokenization can be selected. \nAs a side\
            \ effect, the card used for the payment will be associated with the supplied\
            \ `agreement.id`. This card will be locked, preventing the customer from\
            \ deleting it from the system until an alternate card is chosen for auto-debit\
            \ payments.\n\nNOTE: If `save_card` is selected: \n1. The amount must\
            \ be zero for the save card operation. \n2. The selected MID(pg_code)\
            \ must support tokenization to enable the save card operation. \n3. Please\
            \ note that the save card operation is considered successful without any\
            \ funds being charged.\n4. Once a card is created, Ottu will send a webhook\
            \ containing the card details to the merchant's webhook URL.\n\n\n* `one_off`\
            \ - One Off\n* `auto_debit` - Auto Debit\n* `save_card` - Save Card"
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        qr_code_url:
          type: string
          format: uri
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status. `order_no`, `reference_number`
            and `session_id` will be appended to the redirect URL as query parameters.
          maxLength: 200
        sdk_setup_preload_payload:
          allOf:
          - $ref: '#/components/schemas/CheckoutSDK'
          readOnly: true
          default: false
          description: A JSON object containing preloaded data required to initialize
            the checkout interface.This includes essential details such as customer
            information, available payment methods.and specific transaction details,
            all formatted according to the Checkout SDK's initialization specifications.This
            field streamlines the checkout process by providing necessary information
            upfront.enhancing user experience and efficiency.
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        settled_pg_code:
          type: string
          readOnly: true
          title: Final Payment Gateway
          description: The code of the payment gateway used for completing the transaction.
            This field indicates the specific gateway that processed and settled the
            payment, providing clarity on which payment service was ultimately utilized
            for this transaction.
        shipping_excl_tax:
          type: string
          format: decimal
          title: Shipping Excl. Tax
          description: The cost of shipping for the invoice, excluding taxes.
        shipping_incl_tax:
          type: string
          format: decimal
          title: Shipping Incl. Tax
          description: The cost of shipping for the invoice, including all applicable
            taxes.
        shipping_method:
          type: string
          description: The method or service used for shipping the items associated
            with the invoice.
        shipping_tax_rate:
          type: string
          format: decimal
          description: 'The tax rate applied to the shipping cost, expressed as a
            percentage. '
        shortify_attachment_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the URL of the uploaded attachment will be
            shortened using a URL shortener service. This should be used when sharing
            the attachment URL via SMS or WhatsApp.
        shortify_checkout_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the checkout URL will be shortened using a
            URL shortener service. This should be used when sharing the payment URL
            via SMS or WhatsApp.
        state:
          enum:
          - created
          - pending
          - attempted
          - authorized
          - paid
          - failed
          - canceled
          - expired
          - invalided
          - refunded
          - cod
          type: string
          x-spec-enum-id: 8f97a962a4efdeb1
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        status:
          enum:
          - sent
          - paid
          - overdue
          - canceled
          type: string
          x-spec-enum-id: f81189885ebf787e
          readOnly: true
          description: |-
            Current status of the invoice. Can be one of the following: `sent`, `paid`, `overdue`, `canceled`.

            * `sent` - Sent
            * `paid` - Paid
            * `overdue` - Overdue
            * `canceled` - Canceled
        subtotal:
          type: string
          format: decimal
          description: Sum of total_incl_tax's of all invoice items.
        tax_amount:
          type: string
          format: decimal
          description: The total amount of tax applied to the invoice.
        tax_rate:
          type: string
          format: decimal
          title: Tax
          description: The tax rate applied to the invoice, expressed as a percentage.
        total_excl_tax:
          type: string
          format: decimal
          title: Total Excl. Tax
          description: The total amount of the invoice, excluding taxes.
        total_incl_tax:
          type: string
          format: decimal
          title: Total Incl. Tax
          description: The total amount of the invoice, including all applicable taxes.
        unit_code:
          type: string
          writeOnly: true
          title: Unit
          description: The slug of the unit to be used for the transaction.
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
      required:
      - attachment_short_url
      - checkout_short_url
      - checkout_url
      - currency_code
      - due_date
      - invoice_id
      - invoice_items
      - invoice_number
      - operation
      - payment_methods
      - pg_codes
      - qr_code_url
      - sdk_setup_preload_payload
      - session_id
      - settled_pg_code
      - state
      - status
      - type
    InvoicePOSTResponse:
      type: object
      description: |-
        Serializer class for `Invoice` instances, inheriting from `BaseInvoiceSerializer` and
        `CheckoutSerializer`. It provides methods for creating invoices, invoice items, and transactions.
      properties:
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
        due_date:
          type: string
          format: date
          description: The date by which the customer is expected to make payment
            for the invoice.
        invoice_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
          description: The list of items for the invoice.
        invoice_number:
          type: string
          description: A unique identifier for the invoice, typically used for tracking
            and referencing purposes.
          maxLength: 255
        pg_codes:
          type: array
          items:
            type: string
          title: Gateway
          description: The list of payment gateway codes from which a customer can
            select to perform the payment
        type:
          enum:
          - e_commerce
          - payment_request
          type: string
          x-spec-enum-id: ad398830c7970f0a
          description: |-
            The type of the payment transaction. This field represents the purpose of the payment and can be one of several pre-defined choices.

            * `e_commerce` - Ecommerce
            * `payment_request` - Payment Request
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/ShippingAddress'
        agreement:
          allOf:
          - $ref: '#/components/schemas/Agreement'
          description: "An established contractual arrangement with the payer, which\
            \ authorizes you to securely store and subsequently utilize their payment\
            \ information for specific purposes. This could encompass arrangements\
            \ like recurring payments for services such as mobile subscriptions, installment-based\
            \ payments for purchases, arrangements for ad-hoc charges like account\
            \ top-ups, or for standard industry practices like penalty charges for\
            \ missed appointments. \n\nNote: If your intention is solely to store\
            \ payment details for transactions initiated by the payer in the future,\
            \ then this parameter group should not be used."
        amount:
          type: string
          format: decimal
          description: Represents the total amount of the payment transaction, which
            includes the cost of the purchased items or services but excludes any
            additional fees or charges
        attachment:
          type: string
          format: uri
          description: 'A writable field that accepts an attachment file to be included
            in email notifications sent to the customer regarding their payment, and
            also be available for download on the checkout page. This field may be
            used to provide the customer with additional information or documentation
            related to their purchase. The value of this field should be a file object.
            Upon successful submission, the API will return the URL for downloading
            the attached file. '
        attachment_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL that links to the attachment associated with this
            payment. This URL may be included in email/sms notifications sent to the
            customer regarding their payment or displayed on the checkout page to
            allow the customer to easily access the attachment.
        attachment_upload_url:
          type: string
          description: A writable field that accepts an attachment that has already
            been uploaded to the server.
          pattern: (?:pdf|jpeg|png|doc|docx|jpg|xls|xlsx|txt)$
        card_acceptance_criteria:
          allOf:
          - $ref: '#/components/schemas/CardAcceptanceCriteria'
          description: |-
            This field allows you to define specific rules and conditions that a card must meet to be eligible for payment. These stipulations apply regardless of whether a customer chooses to pay using a saved card or opts to add a new card for the transaction. By leveraging the `card_acceptance_criteria`, you gain the power to fine-tune your payment processing strategy, tailoring acceptance rules to align with your business needs, security standards, and risk management policies.

            **Example**: If you run an exclusive service that caters predominantly to premium customers, you might set criteria that only allow transactions from high-tier credit cards like VISA Platinum. This ensures that payments align with the exclusivity and branding of your services. Remember to configure these criteria thoughtfully. Striking the right balance between security, risk mitigation, and user experience is paramount.

            **Note**: The `card_acceptance_criteria` field is applicable only for direct payments and not for hosted session payments.
        checkout_short_url:
          type: string
          format: uri
          readOnly: true
          description: A short URL link that, when opened, redirects to the checkout
            page for this payment. This URL may be shared with the customer to allow
            them to easily access and complete the payment. This field is only available
            if the `shortify_checkout_url` field is set to True.
        checkout_url:
          type: string
          format: uri
          readOnly: true
          description: URL that directs the customer to the Ottu Checkout Page where
            they can see the payment details and available payment methods for the
            transaction. If you need to share the payment link over SMS or WhatsApp,
            use `checkout_short_url` instead.
        company_name:
          type: string
          description: The company name is used for invoice API.
          maxLength: 64
        customer_email:
          type: string
          format: email
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 16
        discount_amount:
          type: string
          format: decimal
          description: The fixed amount discount applied to the full invoice amount,
            including taxes. If set, the discount_percentage field will be set to
            null. Both discount_amount and discount_percentage cannot be set simultaneously.
            The discount cannot be higher than the `total_excl_tax` field.
        discount_percentage:
          type: string
          format: decimal
          description: The percentage-based discount applied to the full invoice amount,
            including taxes. If set, the discount_amount field will be automatically
            calculated. Both discount_amount and discount_percentage cannot be set
            simultaneously. The discount cannot be higher than the `total_excl_tax`
            field.
        due_datetime:
          type: string
          format: date-time
          title: Due date and time
          description: The date and time by which the payment is due. This field may
            be used to help remind the customer to complete the payment before the
            due date.
        email_recipients:
          type: array
          items:
            type: string
            format: email
          description: A comma-separated list of email addresses for internal recipients
            who will receive customer emails. These recipients will be included in
            email notifications sent to the customer regarding their payment.
        expiration_time:
          type: string
          description: If defined, any payment transactions created more than the
            specified period of time ago will be invalidated or expired if the customer
            attempts to complete them. By default, this expiration period is set to
            24 hours from the time of transaction creation. This feature helps ensure
            that payment transactions are processed promptly.
        generate_qr_code:
          type: boolean
          writeOnly: true
          default: false
          description: If set to true, the `qr_code_url` field will be present in
            the response. Upon scanning it, the customer will be redirected to the
            checkout_url, which is the Ottu Checkout page.
        include_sdk_setup_preload:
          type: boolean
          writeOnly: true
          default: false
          description: Set this to true to include the 'sdk_setup_preload_payload'
            payload in the API response. This payload is only generated and added
            when this parameter is explicitly set to true. By default, it is false
            and the 'sdk_setup_preload_payload' payload will not be included.
        initiator_id:
          type: integer
          title: initiator
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was using
            API Key auth initiator_id can be set to any value that corresponds to
            an existing ACTIVE user in the system
        invoice_id:
          type: integer
          readOnly: true
        language:
          enum:
          - en
          - ar
          type: string
          x-spec-enum-id: 41ab03839742157c
          default: en
          description: |-
            This field specifies the language to be used for communication with the customer, including the payment page, receipt, invoice, email, SMS, and any other communications related to the payment transaction.

            * `en` - English
            * `ar` - Arabic
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          title: Notification settings
          description: A JSON field that contains the notification settings for this
            payment transaction, including SMS and email notifications, as well as
            the events for which they will be sent (e.g., 'created', 'paid', 'refund',
            'canceled', etc.). This field may be used to configure and customize the
            notifications sent to customers and internal recipients throughout the
            payment process.
        operation:
          type: string
          readOnly: true
          description: Specifies the type of operation to be performed by the payment
            gateway. If set to `purchase`, the payment source will be directly charged.
            If set to `authorize`, the payment source will only be authorized and
            the actual charge will be made at a later time.
        order_no:
          type: string
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        payment_methods:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodsForRedirect'
          readOnly: true
          description: An array containing all the payment methods derived from the
            `pg_codes` input. Each object in the array contains information about
            a single payment gateway, including its icon and the `redirect_url` that
            will redirect the customer to the payment gateway's payment page.
        payment_type:
          enum:
          - one_off
          - auto_debit
          - save_card
          type: string
          x-spec-enum-id: ac40d7871ffc8132
          default: one_off
          description: "Type of payment. Choose `one_off` for payments that occur\
            \ only once without future commitments. Choose `auto_debit` for payments\
            \ that are automatically deducted, such as recurring subscriptions, installments,\
            \ or unscheduled auto-debits. \n\nChoose `save_card` if you want to perform\
            \ a card tokenization operation.\n\nNOTE: If `auto_debit` is selected:\
            \ \n1. `agreement` and `customer_id` parameters will also be mandatory.\
            \ \n2. Only PG codes supporting tokenization can be selected. \nAs a side\
            \ effect, the card used for the payment will be associated with the supplied\
            \ `agreement.id`. This card will be locked, preventing the customer from\
            \ deleting it from the system until an alternate card is chosen for auto-debit\
            \ payments.\n\nNOTE: If `save_card` is selected: \n1. The amount must\
            \ be zero for the save card operation. \n2. The selected MID(pg_code)\
            \ must support tokenization to enable the save card operation. \n3. Please\
            \ note that the save card operation is considered successful without any\
            \ funds being charged.\n4. Once a card is created, Ottu will send a webhook\
            \ containing the card details to the merchant's webhook URL.\n\n\n* `one_off`\
            \ - One Off\n* `auto_debit` - Auto Debit\n* `save_card` - Save Card"
        product_type:
          type: string
          description: The type of product or service being purchased. This field
            may be used for tracking and reporting purposes.
          maxLength: 128
        qr_code_url:
          type: string
          format: uri
          readOnly: true
          description: A QR code that, when scanned, redirects to the checkout page
            for this payment. This QR code may be displayed on invoices, receipts,
            or other documents to allow customers to easily access the checkout page
            and make a payment. This parameter is only present when `generate_qr_code`
            is set to true.
        redirect_url:
          type: string
          format: uri
          description: The URL where the customer will be redirected after the payment
            stage only if the webhook URL returns a success status. `order_no`, `reference_number`
            and `session_id` will be appended to the redirect URL as query parameters.
          maxLength: 200
        sdk_setup_preload_payload:
          allOf:
          - $ref: '#/components/schemas/CheckoutSDK'
          readOnly: true
          default: false
          description: A JSON object containing preloaded data required to initialize
            the checkout interface.This includes essential details such as customer
            information, available payment methods.and specific transaction details,
            all formatted according to the Checkout SDK's initialization specifications.This
            field streamlines the checkout process by providing necessary information
            upfront.enhancing user experience and efficiency.
        session_id:
          type: string
          readOnly: true
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
        settled_pg_code:
          type: string
          readOnly: true
          title: Final Payment Gateway
          description: The code of the payment gateway used for completing the transaction.
            This field indicates the specific gateway that processed and settled the
            payment, providing clarity on which payment service was ultimately utilized
            for this transaction.
        shipping_excl_tax:
          type: string
          format: decimal
          title: Shipping Excl. Tax
          description: The cost of shipping for the invoice, excluding taxes.
        shipping_incl_tax:
          type: string
          format: decimal
          title: Shipping Incl. Tax
          description: The cost of shipping for the invoice, including all applicable
            taxes.
        shipping_method:
          type: string
          description: The method or service used for shipping the items associated
            with the invoice.
        shipping_tax_rate:
          type: string
          format: decimal
          description: 'The tax rate applied to the shipping cost, expressed as a
            percentage. '
        shortify_attachment_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the URL of the uploaded attachment will be
            shortened using a URL shortener service. This should be used when sharing
            the attachment URL via SMS or WhatsApp.
        shortify_checkout_url:
          type: boolean
          writeOnly: true
          default: false
          description: If set to True, the checkout URL will be shortened using a
            URL shortener service. This should be used when sharing the payment URL
            via SMS or WhatsApp.
        state:
          enum:
          - created
          - pending
          - attempted
          - authorized
          - paid
          - failed
          - canceled
          - expired
          - invalided
          - refunded
          - cod
          type: string
          x-spec-enum-id: 8f97a962a4efdeb1
          readOnly: true
          description: |-
            The current state of the payment transaction, it helps to understand the progress of the payment.

            * `created` - Created
            * `pending` - Pending
            * `attempted` - Attempted
            * `authorized` - Authorized
            * `paid` - Paid
            * `failed` - Failed
            * `canceled` - Canceled
            * `expired` - Expired
            * `invalided` - Invalided
            * `refunded` - Refunded
            * `cod` - Cash on Delivery
        status:
          enum:
          - sent
          - paid
          - overdue
          - canceled
          type: string
          x-spec-enum-id: f81189885ebf787e
          readOnly: true
          description: |-
            Current status of the invoice. Can be one of the following: `sent`, `paid`, `overdue`, `canceled`.

            * `sent` - Sent
            * `paid` - Paid
            * `overdue` - Overdue
            * `canceled` - Canceled
        subtotal:
          type: string
          format: decimal
          description: Sum of total_incl_tax's of all invoice items.
        tax_amount:
          type: string
          format: decimal
          description: The total amount of tax applied to the invoice.
        tax_rate:
          type: string
          format: decimal
          title: Tax
          description: The tax rate applied to the invoice, expressed as a percentage.
        total_excl_tax:
          type: string
          format: decimal
          title: Total Excl. Tax
          description: The total amount of the invoice, excluding taxes.
        total_incl_tax:
          type: string
          format: decimal
          title: Total Incl. Tax
          description: The total amount of the invoice, including all applicable taxes.
        unit_code:
          type: string
          writeOnly: true
          title: Unit
          description: The slug of the unit to be used for the transaction.
        vendor_name:
          type: string
          description: The name of the vendor or merchant associated with this payment.
            This field may be used for accounting and reporting purposes.
          maxLength: 64
        webhook_url:
          type: string
          format: uri
          description: 'URL where the payment result will be sent via a POST request
            after the customer has completed the payment session. The payment result
            will be included in the request body. '
      required:
      - attachment_short_url
      - checkout_short_url
      - checkout_url
      - currency_code
      - due_date
      - invoice_id
      - invoice_items
      - invoice_number
      - operation
      - payment_methods
      - pg_codes
      - qr_code_url
      - sdk_setup_preload_payload
      - session_id
      - settled_pg_code
      - state
      - status
      - type
    MessageNotification:
      type: object
      description: This serializer is used to validate the lookup fields for the inquiry
        operation.
      properties:
        order_no:
          type: string
          description: This is an optional identifier used to specify the payment
            transaction upon which the operation should be performed. You can use
            either the `order_no` or `session_id` field; at least one of these two
            identifiers must be provided to select the payment transaction that should
            be actioned.
          maxLength: 128
        session_id:
          type: string
          description: Similar to `order_no`, `session_id` is an optional identifier
            used to specify the payment transaction for the operation. You must provide
            either `order_no` or `session_id` in order to select the appropriate payment
            transaction.
          maxLength: 128
        channels:
          type: array
          items:
            enum:
            - sms
            - email
            - whatsapp
            type: string
            description: |-
              * `sms` - sms
              * `email` - email
              * `whatsapp` - whatsapps
            x-spec-enum-id: 650b54eac1aee773
          description: This field refers to the channels that are desired to be triggered
            on the payment. The options are `sms`, `email`, `whatsapp`.
      required:
      - channels
    MessageNotificationFailure:
      type: object
      description: This serializer is used to validate the lookup fields for the inquiry
        operation.
      properties:
        order_no:
          type: string
          description: This is an optional identifier used to specify the payment
            transaction upon which the operation should be performed. You can use
            either the `order_no` or `session_id` field; at least one of these two
            identifiers must be provided to select the payment transaction that should
            be actioned.
          maxLength: 128
        session_id:
          type: string
          description: Similar to `order_no`, `session_id` is an optional identifier
            used to specify the payment transaction for the operation. You must provide
            either `order_no` or `session_id` in order to select the appropriate payment
            transaction.
          maxLength: 128
        channels:
          enum:
          - sms
          - email
          - whatsapp
          type: string
          description: |-
            * `sms` - sms
            * `email` - email
            * `whatsapp` - whatsapps
          x-spec-enum-id: 650b54eac1aee773
        result:
          enum:
          - failed
          type: string
          description: '* `failed` - Failed'
          x-spec-enum-id: 8b493f06ef915a3f
      required:
      - channels
      - result
    MessageNotificationSuccess:
      type: object
      properties:
        message:
          type: string
          default: Customer notified.
    Nested:
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
            default: To use sms notifications provide the `customer_phone` field.
      required:
      - field_name
    NestedFieldErrors:
      type: object
      properties:
        field_name:
          $ref: '#/components/schemas/Nested'
      required:
      - field_name
    Notifications:
      type: object
      properties:
        email:
          type: array
          items:
            enum:
            - created
            - paid
            - canceled
            - failed
            - expired
            - authorized
            - voided
            - refunded
            - captured
            type: string
            description: |-
              * `created` - Created
              * `paid` - Paid
              * `canceled` - Canceled
              * `failed` - Failed
              * `expired` - Expired
              * `authorized` - Authorized
              * `voided` - Voided
              * `refunded` - Refunded
              * `captured` - Captured
            x-spec-enum-id: a80aa798000d748c
        sms:
          type: array
          items:
            enum:
            - created
            - paid
            - canceled
            - failed
            - expired
            - authorized
            - voided
            - refunded
            - captured
            type: string
            description: |-
              * `created` - Created
              * `paid` - Paid
              * `canceled` - Canceled
              * `failed` - Failed
              * `expired` - Expired
              * `authorized` - Authorized
              * `voided` - Voided
              * `refunded` - Refunded
              * `captured` - Captured
            x-spec-enum-id: a80aa798000d748c
        whatsapp:
          type: array
          items:
            enum:
            - created
            - paid
            - canceled
            - failed
            - expired
            - authorized
            type: string
            description: |-
              * `created` - Created
              * `paid` - Paid
              * `canceled` - Canceled
              * `failed` - Failed
              * `expired` - Expired
              * `authorized` - Authorized
            x-spec-enum-id: 2b8b6bb5b3de3756
    Operation:
      type: object
      description: |-
        Fetch the payment txn based on the order no or session id
        also, if the payment txn is not in the accepted state for the
        input operation, raise an error
      properties:
        order_no:
          type: string
          description: This is an optional identifier used to specify the payment
            transaction upon which the operation should be performed. You can use
            either the `order_no` or `session_id` field; at least one of these two
            identifiers must be provided to select the payment transaction that should
            be actioned.
          maxLength: 128
        session_id:
          type: string
          description: Similar to `order_no`, `session_id` is an optional identifier
            used to specify the payment transaction for the operation. You must provide
            either `order_no` or `session_id` in order to select the appropriate payment
            transaction.
          maxLength: 128
        operation:
          enum:
          - delete
          - cancel
          - expire
          - refund
          - capture
          - void
          type: string
          description: |-
            * `delete` - delete
            * `cancel` - cancel
            * `expire` - expire
            * `refund` - refund
            * `capture` - capture
            * `void` - void
          x-spec-enum-id: 5dc8b033bb99a212
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,3})?$
          description: This field is optional and used to specify the amount you want
            to action for `refund` and `capture` operations. If not specified, Ottu
            will attempt to perform the operation on the full amount, or the remaining
            amount if previous operations have been performed. Keep in mind that `void`
            operations always concern the full amount; the `amount` field is not considered
            in this case. The `amount` field can be sent for all operations, but it
            will only be taken into account for `refund` and `capture` operations.
        extra:
          type: object
          additionalProperties: {}
          description: "This field is optional and used to specify additional parameters\
            \ for the operation. \n\n**IFG**: \n\n<b>Full Refund Details</b>\n\nFor\
            \ full refund you don't need to use extra key.\n\n<b>Partial Refund Details</b>\n\
            \nFor operations involving partial refunds, the extra field allows specifying\
            \ individual ticket orders along with their corresponding refund amounts.\n\
            \nThis capability ensures precise control over the refund amounts for\
            \ each ticket within an order.\n\n<b>Key Points</b>\n\n`passengerDocumentNumber`:\
            \ It is imperative to include the document number for each ticket involved\
            \ in the refund operation. This ensures that the refund is accurately\
            \ applied to the correct tickets within an order.\n\n`amount`: Alongside\
            \ each ticket document number, specify the desired refund amount for that\
            \ ticket and make sure the type of amount is `INT`.\n\n`Excluding Tickets`:\
            \  If certain tickets within an order should not be refunded, you can\
            \ specify a refund amount of zero for those tickets. This approach allows\
            \ for selective refunding within a single order.\n\n`Important Note`\n\
            \nAll tickets intended for refund must be explicitly listed in the refund\
            \ order details, with their respective refund amounts clearly defined.\
            \ This requirement ensures comprehensive and error-free processing of\
            \ partial refunds.\n\n<b>Example</b>\n\ncheck in Request samples there\
            \ is an example showcasing how to structure the extra field for a partial\
            \ refund request, including specifying refund amounts for tickets"
      required:
      - operation
    OperationFailure:
      type: object
      properties:
        detail:
          type: string
          description: Provides a message associated with the operation, suitable
            for displaying to the end user.
        operation:
          enum:
          - delete
          - cancel
          - expire
          - refund
          - capture
          - void
          - operation_tracking
          type: string
          description: |-
            * `delete` - delete
            * `cancel` - cancel
            * `expire` - expire
            * `refund` - refund
            * `capture` - capture
            * `void` - void
            * `operation_tracking` - operation_tracking
          x-spec-enum-id: 60b85aa608377df0
        result:
          enum:
          - failed
          type: string
          description: '* `failed` - Failed'
          x-spec-enum-id: 8b493f06ef915a3f
      required:
      - detail
      - operation
      - result
    PGCodeValidation:
      type: object
      properties:
        pg_code:
          type: string
          maxLength: 50
      required:
      - pg_code
    PGPaymentMethods:
      type: object
      properties:
        code:
          type: string
          readOnly: true
          description: Indicates the unique code associated with the payment gateway.
            This pivotal identifier facilitates transaction initiation through both
            the dashboard and API.
        name:
          type: string
          readOnly: true
          description: Represents the payment gateway internal name defined in Ottu.
        pg:
          type: string
          readOnly: true
          description: Represents the payment gateway name defined in Ottu to be displayed.
        is_sandbox:
          type: boolean
          readOnly: true
          description: Indicates whether this payment gateway operates in a sandbox
            or production environment.
        logo:
          type: string
          format: uri
          description: Logo to be used in emails/confirmation pages/etc
        wallets:
          type: array
          items: {}
          readOnly: true
          default:
          - ApplePay
          - GooglePay
          description: Denotes a list of payment services linked with this payment
            gateway, such as `GooglePay` and `ApplePay`
        default_currency:
          type: string
          readOnly: true
          default: KWD
          description: Specifies the default currency code for the payment gateway,
            formatted according to ISO 4217.
        accepted_currencies:
          type: array
          items: {}
          readOnly: true
          default:
          - KWD
          - USD
          description: Indicates a list of default accepted currencies for the payment
            gateway, each formatted in accordance with ISO 4217 standards.
        operation:
          type: string
          description: 'Specifies the processing operation type for the payment method:
            either ''authorize'' or ''purchase''. When set to `authorize`, successful
            transactions using this payment method will transition to the `authorize`
            state. Similarly, if set to `purchase`, they will follow the purchase
            flow.'
        operations:
          type: array
          items: {}
          default:
          - refund
          - void
          readOnly: true
          description: Specifies the payment operations that are available for this
            payment gateway.
        is_tokenizable:
          type: boolean
          description: This flag indicates whether tokenization is enabled for this
            payment gateway. When set to true, it allows for the secure storage of
            payment details, enabling future transactions without the need for re-entering
            payment information.
      required:
      - accepted_currencies
      - code
      - default_currency
      - is_sandbox
      - is_tokenizable
      - logo
      - name
      - operation
      - operations
      - pg
      - wallets
    PaymentLabel:
      type: object
      properties:
        payment_type:
          type: string
        instalment:
          type: integer
        description_en:
          type: string
        description_ar:
          type: string
      required:
      - description_ar
      - description_en
      - instalment
      - payment_type
    PaymentMethodsForRedirect:
      type: object
      properties:
        code:
          type: string
          description: The slug code of the payment method.
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          description: The name of the payment method.
        pg:
          type: string
          description: The payment gateway of the payment.
        type:
          enum:
          - e_commerce
          - payment_request
          type: string
          x-spec-enum-id: ad398830c7970f0a
          description: |-
            The type of the payment transaction.

            * `e_commerce` - Ecommerce
            * `payment_request` - Payment Request
        amount:
          type: string
          description: The total amount to be charged, including fees.
        currency_code:
          type: string
          description: The currency code for the payment method represented as an
            ISO 4217 code.
          maxLength: 3
        fee:
          type: string
          description: The fee charged by the payment gateway.
        fee_description:
          type: string
          description: This field provides the label for any additional transaction
            fee. In the SDK, this label will be displayed prominently during the checkout
            process to inform the payer about the nature of the fee. Ensure to incorporate
            this field in a clear and visible manner within the checkout UI to maintain
            transparency with the end-users.
        icon:
          type: string
          format: uri
          description: The URL of the icon for the payment method.
        flow:
          type: string
          default: redirect
          description: The flow type of the payment method.
        redirect_url:
          type: string
          format: uri
          nullable: true
          description: The URL where the customer should be redirected to perform
            the payment.
      required:
      - amount
      - code
      - currency_code
      - fee
      - fee_description
      - icon
      - name
      - pg
      - type
    PaymentMethodsRequest:
      type: object
      properties:
        plugin:
          type: string
          description: Payment methods will be curated based on their compatibility
            with the specified plugin.
          maxLength: 50
        currencies:
          type: array
          items: {}
          description: 'Specify the three-letter ISO 4217 codes representing the desired
            currencies. Examples include USD for United States Dollar, EUR for Euro,
            and GBP for British Pound Sterling. Example: [''KWD'',''USD'']'
        customer_id:
          type: string
          description: If provided, `customer_payment_methods` will be filtered to
            show only those payment methods that have been successfully used with
            a paid payment attempts by this customer in the past.
          maxLength: 64
        operation:
          enum:
          - purchase
          - authorize
          type: string
          x-spec-enum-id: 2bdedaf491523e6c
          description: |-
            When specified, the available payment methods will be refined based on their compatibility with the indicated operation.

            * `purchase` - purchase
            * `authorize` - authorize
        tokenizable:
          type: boolean
          description: If defined, payment methods will be filtered based on supporting
            tokenization and auto-debit action.
        pg_names:
          type: array
          items: {}
          description: |-
            When provided, the payment methods will be narrowed down to those that support the specified payment gateway name. Example: ['kpay','mpgs']

            Available Values:<br><li>`cybersource` - CyberSource</li><br><li>`checkoutcom` - checkout.com</li><br><li>`dapi` - Dapi</li><br><li>`burgan` - Burgan</li><br><li>`paypal` - PayPal</li><br><li>`mpgs` - MPGS</li><br><li>`kpay` - KNET</li><br><li>`omannet` - OmanNet</li><br><li>`benefit` - Benefit</li><br><li>`benefit_pay` - BenefitPay</li><br><li>`blank` - Blank</li><br><li>`cbk` - CBK</li><br><li>`fss` - FSS</li><br><li>`myfatoorah` - MyFatoorah</li><br><li>`ngenius` - N-Genius</li><br><li>`ccavenues` - Ccavenues</li><br><li>`payu_india` - PayU India</li><br><li>`cod` - Cash</li><br><li>`amazon_pay` - Amazon Pay</li><br><li>`ottu_pg` - Ottu PG</li><br><li>`bookeey` - Bookeey</li><br><li>`upg` - UPG</li><br><li>`bambora` - Bambora</li><br><li>`hyperpay` - HyperPay</li><br><li>`qpay` - Qpay</li><br><li>`smart_pay` - SmartPay</li><br><li>`sohar` - SoharInternational</li><br><li>`nbo` - NBO</li><br><li>`tabby` - Tabby</li><br><li>`tamara` - Tamara</li><br><li>`hesabe` - Hesabe</li><br><li>`rajhi` - Alrajhi Bank</li><br><li>`stc_pay` - STC Pay</li><br><li>`urpay` - URPay</li><br><li>`beyon_money` - BeyonMoney</li><br><li>`upayments` - UPayments</li>
        type:
          enum:
          - sandbox
          - production
          type: string
          x-spec-enum-id: f0c3770c4fe1cc3f
          description: |-
            When specified, the available payment methods will be refined based on their type determining if type is sandbox or production.

            * `sandbox` - sandbox
            * `production` - production
      required:
      - plugin
    PaymentMethodsResponse:
      type: object
      properties:
        customer_payment_methods:
          type: array
          items: {}
          description: Denotes a collection of payment gateways which used by user
            in successful payment attempts.
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PGPaymentMethods'
          description: Provides a comprehensive overview of the available payment
            gateways, delineated as distinct payment methods.
    PaymentNotificationErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/MessageNotificationFailure'
    PaymentNotificationResponses:
      oneOf:
      - $ref: '#/components/schemas/MessageNotificationSuccess'
    PaymentOperationErrors:
      oneOf:
      - $ref: '#/components/schemas/FieldErrors'
      - $ref: '#/components/schemas/OperationFailure'
    PaymentOperationResponses:
      oneOf:
      - $ref: '#/components/schemas/InternalOperation'
      - $ref: '#/components/schemas/ExternalOperation'
    PrePaymentCheckResponses:
      oneOf:
      - $ref: '#/components/schemas/TabbyPrePaymentCheck'
      - $ref: '#/components/schemas/TamaraPrePaymentCheck'
    SchemaWebhook:
      type: object
      properties:
        pg_params:
          type: string
          readOnly: true
          description: "The `pg_params` field contains the details received \nfrom\
            \ the payment gateway callback these details are \nprovided to us by the\
            \ gateway after a user has completed \na payment transaction additionally,\
            \ `pg_params` \ncan include information obtained from an inquiry \nrequest\
            \ made to the payment gateway status check API. \n"
        agreement:
          allOf:
          - $ref: '#/components/schemas/Agreement'
          readOnly: true
          description: "An established contractual arrangement with the payer, which\
            \ authorizes you to securely store and subsequently utilize their payment\
            \ information for specific purposes. This could encompass arrangements\
            \ like recurring payments for services such as mobile subscriptions, installment-based\
            \ payments for purchases, arrangements for ad-hoc charges like account\
            \ top-ups, or for standard industry practices like penalty charges for\
            \ missed appointments. \n\nNote: If your intention is solely to store\
            \ payment details for transactions initiated by the payer in the future,\
            \ then this parameter group should not be used."
        amount:
          type: string
          readOnly: true
          description: Denotes the total sum of the payment transaction, which encompasses
            the cost of the procured items or services, excluding any supplementary
            fees or charges.
        amount_details:
          allOf:
          - $ref: '#/components/schemas/AmountDetails'
          readOnly: true
          description: 'A comprehensive set of amount details includes: Currency Code,
            Amount, Total, Fee.'
        capture_delivery_address:
          type: boolean
          description: By enabling this, you will ask for user's address. If enabled,
            capture delivery coordinates should also be active.
        capture_delivery_location:
          type: boolean
          title: Capture delivery coordinates
          description: 'By enabling this, you will ask for user''s delivery location
            on a map. '
        card_acceptance_criteria:
          allOf:
          - $ref: '#/components/schemas/CardAcceptanceCriteria'
          readOnly: true
          description: |-
            This field allows you to define specific rules and conditions that a card must meet to be eligible for payment. These stipulations apply regardless of whether a customer chooses to pay using a saved card or opts to add a new card for the transaction. By leveraging the `card_acceptance_criteria`, you gain the power to fine-tune your payment processing strategy, tailoring acceptance rules to align with your business needs, security standards, and risk management policies.

            **Example**: If you run an exclusive service that caters predominantly to premium customers, you might set criteria that only allow transactions from high-tier credit cards like VISA Platinum. This ensures that payments align with the exclusivity and branding of your services. Remember to configure these criteria thoughtfully. Striking the right balance between security, risk mitigation, and user experience is paramount.

            **Note**: The `card_acceptance_criteria` field is applicable only for direct payments and not for hosted session payments.
        currency_code:
          type: string
          description: The specified currency represents the denomination of the transaction.Nevertheless,
            it doesn't necessarily mandate payment in this exact currency.Due to potential
            currency conversions or exchanges, the final charge may be in a different
            currency.
          maxLength: 3
          minLength: 3
        customer_address_city:
          type: string
          description: The city of the customer's billing address. This field may
            be used to send the billing address to the payment gateway.
          maxLength: 40
        customer_address_country:
          type: string
          description: The country of the customer's billing address, formatted as
            a two-letter ISO country code (e.g., 'US' for United States, 'CA' for
            Canada). This field may be used to send the billing address to the payment
            gateway.
          maxLength: 2
          minLength: 2
        customer_address_line1:
          type: string
          title: Customer address line 1
          description: The first line of the customer's billing street address. This
            field may be used to send the billing address to the payment gateway.
        customer_address_line2:
          type: string
          title: Customer address line 2
          description: The second line of the customer's billing street address, if
            available. This field may be used to provide additional address information,
            such as an apartment or suite number.
        customer_address_postal_code:
          type: string
          description: The postal code of the customer's billing address. This field
            may be used to send the billing address to the payment gateway.
          maxLength: 12
        customer_address_state:
          type: string
          description: The state or region of the customer's billing address. This
            field may be used to send the billing address to the payment gateway.
          maxLength: 40
        customer_email:
          type: string
          description: The email address of the customer that is used to send payment
            notifications and receipts, and can be used for fraud prevention. This
            field is mandatory and is always sent to the payment gateway. It may also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 128
        customer_first_name:
          type: string
          description: The first name of the recipient of the payment. This field
            is used for various communications such as the invoice, receipt, email,
            SMS, or displayed on the payment page. It may also be sent to the payment
            gateway if necessary.
          maxLength: 64
        customer_id:
          type: string
          description: The customer ID is a unique identifier for the customer within
            the merchant's system. It is also used as a merchant identifier for the
            customer and plays a critical role in tokenization. All the customer's
            cards will be associated with this ID.
          maxLength: 64
        customer_last_name:
          type: string
          description: The last name of the recipient of the payment. This field is
            used for various communications such as the invoice, receipt, email, SMS,
            or displayed on the payment page. It may also be sent to the payment gateway
            if necessary.
          maxLength: 64
        customer_phone:
          type: string
          description: Customer phone number associated with the payment. This might
            be sent to the payment gateway and depending on the gateway, it may trigger
            a click to pay process on the payment page. The phone number will also
            be included in the invoice, receipt, email, and displayed on the payment
            page.
          maxLength: 32
        extra:
          description: The extra information for the payment details, which the merchant
            has sent it in key value form.
        fee:
          type: string
          description: The fee denotes the sum the customer pays in their chosen payment
            currency. This may vary from the transaction's designated currency. The
            fee is computed once to maintain precision and uniformity throughout the
            payment procedure.
          readOnly: true
        gateway_account:
          type: string
          readOnly: true
          description: This code corresponds to the payment gateway and plays an essential
            role in facilitating payment transactions.
        gateway_name:
          type: string
          readOnly: true
          description: The name of the payment gateway service being utilized.
        gateway_response:
          type: object
          additionalProperties: {}
          description: This field stores the processed response received from the
            payment gateway and forwarded to Ottu.
          readOnly: true
        initiator:
          allOf:
          - $ref: '#/components/schemas/InitiatorUser'
          description: The user who initiated the creation of this payment transaction,
            if available. This field is optional and may be used to track who created
            the payment transaction. Note that if the payment transaction was using
            API Key auth initiator_id can be set to any value that corresponds to
            an existing ACTIVE user in the system
        is_sandbox:
          type: boolean
          title: Is Sandbox?
          description: Indicates whether the operation was performed in a test environment
            or not.
        message:
          type: string
          readOnly: true
          description: This represents the message, either transmitted by the Payment
            Gateway (PG) or established by Ottu, that provides a detailed illustration
            of the payment's current status.
        order_no:
          type: string
          nullable: true
          description: The unique identifier assigned to this payment transaction.
            It is used for tracking purposes and is set by the merchant or the system.
          maxLength: 128
        paid_amount:
          oneOf:
          - type: number
            format: double
          - type: string
          description: The paid amount encompasses fees or captured amounts from authorized
            transactions. This total is derived from the specified 'amount' field,
            converting foreign currencies to the default as necessary. This might
            result in minor variations due to fluctuations in exchange rates.
          readOnly: true
        payment_type:
          enum:
          - one_off
          - auto_debit
          - save_card
          type: string
          x-spec-enum-id: ac40d7871ffc8132
          description: "Type of payment. Choose `one_off` for payments that occur\
            \ only once without future commitments. Choose `auto_debit` for payments\
            \ that are automatically deducted, such as recurring subscriptions, installments,\
            \ or unscheduled auto-debits. \n\nChoose `save_card` if you want to perform\
            \ a card tokenization operation.\n\nNOTE: If `auto_debit` is selected:\
            \ \n1. `agreement` and `customer_id` parameters will also be mandatory.\
            \ \n2. Only PG codes supporting tokenization can be selected. \nAs a side\
            \ effect, the card used for the payment will be associated with the supplied\
            \ `agreement.id`. This card will be locked, preventing the customer from\
            \ deleting it from the system until an alternate card is chosen for auto-debit\
            \ payments.\n\nNOTE: If `save_card` is selected: \n1. The amount must\
            \ be zero for the save card operation. \n2. The selected MID(pg_code)\
            \ must support tokenization to enable the save card operation. \n3. Please\
            \ note that the save card operation is considered successful without any\
            \ funds being charged.\n4. Once a card is created, Ottu will send a webhook\
            \ containing the card details to the merchant's webhook URL.\n\n\n* `one_off`\
            \ - One Off\n* `auto_debit` - Auto Debit\n* `save_card` - Save Card"
        reference_number:
          type: string
          readOnly: true
          description: An auto-generated internal identifier for this payment transaction.
            While this field may be used for tracking and reporting purposes, it is
            recommended to use the session_id field instead, as it provides the same
            functionality and more.
        refunded_amount:
          type: number
          format: double
          description: The total refunded amount for the payment transaction.
        remaining_amount:
          type: number
          format: double
          description: The residual amount due. Together with the editable amount,
            it indicates the outstanding balance of a transaction awaiting settlement.
          readOnly: true
        result:
          enum:
          - pending
          - success
          - failed
          - canceled
          - error
          - cod
          type: string
          description: Indicates the outcome of the operation. `success` denotes a
            successful operation.
          x-spec-enum-id: fee5fc5aba1537c0
          readOnly: true
        session_id:
          type: string
          description: A unique identifier for each payment transaction, used to maintain
            the session state during the payment process.
          maxLength: 128
        settled_amount:
          type: number
          format: double
          description: The amount that has been paid or authorized in its original
            currency, excluding any fees.
          readOnly: true
        signature:
          type: string
          readOnly: true
          description: 'Signature Field: A cryptographic hash used to guarantee data
            integrity and authenticity during client-server exchanges. This hash ensures
            that the API payload has not been tampered with, and can only be verified
            by authorized parties.'
        state:
          type: string
          readOnly: true
          description: The current state of the payment transaction, it helps to understand
            the progress of the payment.
        token:
          allOf:
          - $ref: '#/components/schemas/Card'
          description: |-
            Please note that if card is created via checkout save_card payment type

            It means card is created via successful operation without any funds charged.

            For more details check Checkout API `payment_type` field documentation details
        transaction_log_id:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
          nullable: true
          description: Identifies the transaction log associated with the payment
            transaction. A transaction log is created for each record that is dispatched
            during a bulk dispatch process.
        timestamp_utc:
          type: string
          format: date-time
          readOnly: true
          description: This field represents the timestamp at which ottu processed
            the transaction.While this often corresponds to the payment time,it's
            important to note that it might not always be the case.Payments can be
            acknowledged at a later time,so this timestamp might not align precisely
            with the actual payment time.
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ChildPayment'
          description: A list of dictionaries is generated, each containing a concise
            summary of each child payment transaction that has been created.
        voided_amount:
          type: number
          format: double
          description: The total voided amount for the payment transaction.
      required:
      - agreement
      - amount
      - amount_details
      - card_acceptance_criteria
      - currency_code
      - customer_address_country
      - fee
      - gateway_account
      - gateway_name
      - gateway_response
      - message
      - paid_amount
      - pg_params
      - reference_number
      - remaining_amount
      - result
      - settled_amount
      - signature
      - state
      - timestamp_utc
    ShippingAddress:
      type: object
      description: Nested serializer to save Address data into PaymentTransaction
      properties:
        line1:
          type: string
          maxLength: 128
        line2:
          type: string
          maxLength: 128
        city:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 40
        country:
          enum:
          - AF
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - CV
          - KH
          - CM
          - CA
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - HR
          - CU
          - CW
          - CY
          - CZ
          - CI
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - SZ
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KP
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MK
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RO
          - RU
          - RW
          - RE
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - SS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TM
          - TC
          - TV
          - TR
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
          - AX
          type: string
          description: |-
            * `AF` - Afghanistan
            * `AL` - Albania
            * `DZ` - Algeria
            * `AS` - American Samoa
            * `AD` - Andorra
            * `AO` - Angola
            * `AI` - Anguilla
            * `AQ` - Antarctica
            * `AG` - Antigua and Barbuda
            * `AR` - Argentina
            * `AM` - Armenia
            * `AW` - Aruba
            * `AU` - Australia
            * `AT` - Austria
            * `AZ` - Azerbaijan
            * `BS` - Bahamas
            * `BH` - Bahrain
            * `BD` - Bangladesh
            * `BB` - Barbados
            * `BY` - Belarus
            * `BE` - Belgium
            * `BZ` - Belize
            * `BJ` - Benin
            * `BM` - Bermuda
            * `BT` - Bhutan
            * `BO` - Bolivia, Plurinational State of
            * `BQ` - Bonaire, Sint Eustatius and Saba
            * `BA` - Bosnia and Herzegovina
            * `BW` - Botswana
            * `BV` - Bouvet Island
            * `BR` - Brazil
            * `IO` - British Indian Ocean Territory
            * `BN` - Brunei Darussalam
            * `BG` - Bulgaria
            * `BF` - Burkina Faso
            * `BI` - Burundi
            * `CV` - Cabo Verde
            * `KH` - Cambodia
            * `CM` - Cameroon
            * `CA` - Canada
            * `KY` - Cayman Islands
            * `CF` - Central African Republic
            * `TD` - Chad
            * `CL` - Chile
            * `CN` - China
            * `CX` - Christmas Island
            * `CC` - Cocos (Keeling) Islands
            * `CO` - Colombia
            * `KM` - Comoros
            * `CG` - Congo
            * `CD` - Congo, The Democratic Republic of the
            * `CK` - Cook Islands
            * `CR` - Costa Rica
            * `HR` - Croatia
            * `CU` - Cuba
            * `CW` - Curaçao
            * `CY` - Cyprus
            * `CZ` - Czechia
            * `CI` - Côte d'Ivoire
            * `DK` - Denmark
            * `DJ` - Djibouti
            * `DM` - Dominica
            * `DO` - Dominican Republic
            * `EC` - Ecuador
            * `EG` - Egypt
            * `SV` - El Salvador
            * `GQ` - Equatorial Guinea
            * `ER` - Eritrea
            * `EE` - Estonia
            * `SZ` - Eswatini
            * `ET` - Ethiopia
            * `FK` - Falkland Islands (Malvinas)
            * `FO` - Faroe Islands
            * `FJ` - Fiji
            * `FI` - Finland
            * `FR` - France
            * `GF` - French Guiana
            * `PF` - French Polynesia
            * `TF` - French Southern Territories
            * `GA` - Gabon
            * `GM` - Gambia
            * `GE` - Georgia
            * `DE` - Germany
            * `GH` - Ghana
            * `GI` - Gibraltar
            * `GR` - Greece
            * `GL` - Greenland
            * `GD` - Grenada
            * `GP` - Guadeloupe
            * `GU` - Guam
            * `GT` - Guatemala
            * `GG` - Guernsey
            * `GN` - Guinea
            * `GW` - Guinea-Bissau
            * `GY` - Guyana
            * `HT` - Haiti
            * `HM` - Heard Island and McDonald Islands
            * `VA` - Holy See (Vatican City State)
            * `HN` - Honduras
            * `HK` - Hong Kong
            * `HU` - Hungary
            * `IS` - Iceland
            * `IN` - India
            * `ID` - Indonesia
            * `IR` - Iran, Islamic Republic of
            * `IQ` - Iraq
            * `IE` - Ireland
            * `IM` - Isle of Man
            * `IL` - Israel
            * `IT` - Italy
            * `JM` - Jamaica
            * `JP` - Japan
            * `JE` - Jersey
            * `JO` - Jordan
            * `KZ` - Kazakhstan
            * `KE` - Kenya
            * `KI` - Kiribati
            * `KP` - Korea, Democratic People's Republic of
            * `KR` - Korea, Republic of
            * `KW` - Kuwait
            * `KG` - Kyrgyzstan
            * `LA` - Lao People's Democratic Republic
            * `LV` - Latvia
            * `LB` - Lebanon
            * `LS` - Lesotho
            * `LR` - Liberia
            * `LY` - Libya
            * `LI` - Liechtenstein
            * `LT` - Lithuania
            * `LU` - Luxembourg
            * `MO` - Macao
            * `MG` - Madagascar
            * `MW` - Malawi
            * `MY` - Malaysia
            * `MV` - Maldives
            * `ML` - Mali
            * `MT` - Malta
            * `MH` - Marshall Islands
            * `MQ` - Martinique
            * `MR` - Mauritania
            * `MU` - Mauritius
            * `YT` - Mayotte
            * `MX` - Mexico
            * `FM` - Micronesia, Federated States of
            * `MD` - Moldova, Republic of
            * `MC` - Monaco
            * `MN` - Mongolia
            * `ME` - Montenegro
            * `MS` - Montserrat
            * `MA` - Morocco
            * `MZ` - Mozambique
            * `MM` - Myanmar
            * `NA` - Namibia
            * `NR` - Nauru
            * `NP` - Nepal
            * `NL` - Netherlands
            * `NC` - New Caledonia
            * `NZ` - New Zealand
            * `NI` - Nicaragua
            * `NE` - Niger
            * `NG` - Nigeria
            * `NU` - Niue
            * `NF` - Norfolk Island
            * `MK` - North Macedonia
            * `MP` - Northern Mariana Islands
            * `NO` - Norway
            * `OM` - Oman
            * `PK` - Pakistan
            * `PW` - Palau
            * `PS` - Palestine, State of
            * `PA` - Panama
            * `PG` - Papua New Guinea
            * `PY` - Paraguay
            * `PE` - Peru
            * `PH` - Philippines
            * `PN` - Pitcairn
            * `PL` - Poland
            * `PT` - Portugal
            * `PR` - Puerto Rico
            * `QA` - Qatar
            * `RO` - Romania
            * `RU` - Russian Federation
            * `RW` - Rwanda
            * `RE` - Réunion
            * `BL` - Saint Barthélemy
            * `SH` - Saint Helena, Ascension and Tristan da Cunha
            * `KN` - Saint Kitts and Nevis
            * `LC` - Saint Lucia
            * `MF` - Saint Martin (French part)
            * `PM` - Saint Pierre and Miquelon
            * `VC` - Saint Vincent and the Grenadines
            * `WS` - Samoa
            * `SM` - San Marino
            * `ST` - Sao Tome and Principe
            * `SA` - Saudi Arabia
            * `SN` - Senegal
            * `RS` - Serbia
            * `SC` - Seychelles
            * `SL` - Sierra Leone
            * `SG` - Singapore
            * `SX` - Sint Maarten (Dutch part)
            * `SK` - Slovakia
            * `SI` - Slovenia
            * `SB` - Solomon Islands
            * `SO` - Somalia
            * `ZA` - South Africa
            * `GS` - South Georgia and the South Sandwich Islands
            * `SS` - South Sudan
            * `ES` - Spain
            * `LK` - Sri Lanka
            * `SD` - Sudan
            * `SR` - Suriname
            * `SJ` - Svalbard and Jan Mayen
            * `SE` - Sweden
            * `CH` - Switzerland
            * `SY` - Syrian Arab Republic
            * `TW` - Taiwan, Province of China
            * `TJ` - Tajikistan
            * `TZ` - Tanzania, United Republic of
            * `TH` - Thailand
            * `TL` - Timor-Leste
            * `TG` - Togo
            * `TK` - Tokelau
            * `TO` - Tonga
            * `TT` - Trinidad and Tobago
            * `TN` - Tunisia
            * `TM` - Turkmenistan
            * `TC` - Turks and Caicos Islands
            * `TV` - Tuvalu
            * `TR` - Türkiye
            * `UG` - Uganda
            * `UA` - Ukraine
            * `AE` - United Arab Emirates
            * `GB` - United Kingdom
            * `US` - United States
            * `UM` - United States Minor Outlying Islands
            * `UY` - Uruguay
            * `UZ` - Uzbekistan
            * `VU` - Vanuatu
            * `VE` - Venezuela, Bolivarian Republic of
            * `VN` - Viet Nam
            * `VG` - Virgin Islands, British
            * `VI` - Virgin Islands, U.S.
            * `WF` - Wallis and Futuna
            * `EH` - Western Sahara
            * `YE` - Yemen
            * `ZM` - Zambia
            * `ZW` - Zimbabwe
            * `AX` - Åland Islands
          x-spec-enum-id: 8009381049e5dbe8
        postal_code:
          type: string
          maxLength: 12
        first_name:
          type: string
          maxLength: 64
        last_name:
          type: string
          maxLength: 64
        email:
          type: string
          format: email
          maxLength: 128
        phone:
          type: string
          maxLength: 16
      required:
      - city
      - country
      - email
      - first_name
      - last_name
      - line1
      - phone
    TabbyPrePaymentCheck:
      type: object
      properties:
        is_available:
          type: boolean
          default: true
    TamaraPrePaymentCheck:
      type: object
      properties:
        single_checkout_enabled:
          type: boolean
        is_available:
          type: boolean
        payment_labels:
          type: array
          items:
            $ref: '#/components/schemas/PaymentLabel'
      required:
      - is_available
      - payment_labels
      - single_checkout_enabled
    UserCards:
      type: object
      properties:
        type:
          enum:
          - sandbox
          - production
          type: string
          x-spec-enum-id: 50714307bb779a18
          description: |-
            Choose between `sandbox`, `production`. To retrieve the cards associated to specified environment type.Payment Gateway MIDs, or production to fetch real cards used in live transactions.

            * `sandbox` - Sandbox
            * `production` - Production
        customer_id:
          type: string
          description: Retrieve cards associated with a specific customer using their
            unique customer_id.
        pg_codes:
          type: array
          items: {}
          description: Specify the `pg_code` if you want to retrieve cards for a particular
            payment gateway, such as `credit-card`. The pg_code is initialized in
            the `Checkout API` when the `session_id` is created, with each card being
            associated with a single payment gateway/pg_code.
        agreement_id:
          type: string
          description: Retrieve the card associated with a specific agreement ID.
            When this parameter is provided, the resulting array will contain a maximum
            of one entry, representing the latest card the customer has used for the
            auto-debit payment associated with the given agreement ID.
      required:
      - customer_id
      - type
  securitySchemes:
    SSO BasicAuth:
      type: http
      scheme: basic
    SSO JWT Auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: https://staging4.ottu.dev
